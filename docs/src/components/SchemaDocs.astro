---
import { readFile } from 'node:fs/promises';
import { type JSONSchema7, type JSONSchema7Definition } from 'json-schema';

const { schemaPath, group } = Astro.props;
let schema: JSONSchema7 = {};

try {
    const data = await readFile(schemaPath, 'utf-8');
    schema = JSON.parse(data);
} catch (error) {
    console.error('Error reading schema:', error);
}

const groupProps: [string, JSONSchema7][] = [];

if (schema.properties) {
    Object.entries(schema.properties).forEach(([key, definition]) => {
        console.log(key)
        if (
            typeof definition === 'object' &&
            definition !== null &&
            'group' in definition &&
            definition.group === group
        ) {
            console.log("FOOO")
            groupProps.push([key, definition]);
        }
    });
}
---

<div>
    <h2>{group} Schema Properties</h2>
    <div class='overflow-x-scroll'>
        <table class='min-w-[700px]'>
            <thead>
                <tr>
                    <th class='w-56'>Field</th>
                    <th>Type</th>
                    <th class='w-32'>Default</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                {
                    groupProps.map(([key, def]) => (
                        <tr>
                            <td><code>{key}</code></td>
                            <td>{def.type}</td>
                            <td>{def.default}</td>
                            <td>{def.description}</td>
                        </tr>
                    ))
                }
            </tbody>
        </table>
    </div>
    <ul>
    </ul>
</div>
