name: E2E test (on kubernetes)

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "backend/**"
      - "keycloak/**"
      - "kubernetes/**"
      - "website/**"
      - "deploy.py"
      - ".github/scripts/**"
      - ".github/workflows/**"
  push:
    branches:
      - main

concurrency:
  group: ci-${{ github.ref == 'refs/heads/main' && github.run_id || github.ref }}-e2e-k3d
  cancel-in-progress: true

jobs:
  k3d-e2e:
    permissions:
      packages: read
      contents: read
      checks: read
      actions: read # Required by workflow-telemetry-action

    runs-on: ubuntu-latest-m
    timeout-minutes: 30

    container:
      image: mcr.microsoft.com/playwright:v1.44.0-jammy

    env:
      ALL_BROWSERS: ${{ github.ref == 'refs/heads/main' && 'true' || 'false' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install k3d
        run: |
          curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash

      - uses: azure/setup-helm@v4

      - name: Create k3d cluster
        run: |
          ./deploy.py --verbose cluster

      - name: Template with helm
        uses: WyriHaximus/github-action-helm3@v4
        with:
          exec: ./deploy.py --verbose helm --branch ${{ github.ref_name }} --sha ${{ github.sha }}  --for-e2e --template > /tmp/helm_template.yaml

      - name: Upload default helm template
        uses: actions/upload-artifact@v4
        with:
          name: helm-template
          path: /tmp/helm_template.yaml
      - name: Deploy with helm
        run: |
          ./deploy.py --verbose helm --branch ${{ github.ref_name }} --sha ${{ github.sha }} --for-e2e

      - uses: actions/setup-node@v4
        with:
          node-version-file: ./website/.nvmrc

      - name: Cache .npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('website/**/package-lock.json') }}

      - name: Install dependencies
        run: cd website && npm ci

      - name: Wait for the pods to be ready (timeout 480s)
        run: ./.github/scripts/wait_for_pods_to_be_ready.py
      - name: Sleep for 10 secs
        run: sleep 10
      - name: Run E2E test
        run: |
          cd website && npm run e2e 2>&1 | tee output.txt
          echo '```' >> $GITHUB_STEP_SUMMARY
          sed -n '/Running [0-9]\+ tests/,$p' output.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: playwright-report
          path: website/playwright-report/
          retention-days: 30
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: website/test-results/
          retention-days: 30

      - name: List running pods
        if: ${{ !cancelled() }}
        run: kubectl get pods --all-namespaces
      - name: Describe pods
        if: ${{ !cancelled() }}
        run: kubectl describe pods -l app=loculus
      - name: Show events
        if: ${{ !cancelled() }}
        run: kubectl get events

      - name: Save logs from all containers to file
        if: ${{ !cancelled() }}
        run: ./.github/scripts/collect_kubernetes_logs.sh
      - name: Upload Kubernetes logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: kubernetes-logs
          path: kubernetes_logs/
