name: backend

on:
  push:
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: ghcr.io/loculus-project/backend
  CROSSREF_USERNAME: ${{ secrets.CROSSREF_USERNAME }}
  CROSSREF_TEST_PASSWORD: ${{ secrets.CROSSREF_TEST_PASSWORD }}
  CROSSREF_TEST_ENDPOINT: ${{ secrets.CROSSREF_TEST_ENDPOINT }}
  CROSSREF_DOI_PREFIX: ${{ secrets.CROSSREF_DOI_PREFIX }}

concurrency:
  group: ci-${{ github.ref == 'refs/heads/main' && github.run_id || github.ref }}-backend
  cancel-in-progress: true

jobs:
  Tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "adopt"
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Execute Tests
        run: ./gradlew test
        working-directory: ./backend
      - name: Check Format And Lint
        run: ./gradlew ktlintCheck
        working-directory: ./backend

  dockerImage:
    name: Build Backend Docker Image # Don't change: Referenced by .github/workflows/update-argocd-metadata.yml
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      packages: write
      contents: read
      checks: read
    steps:
      - uses: actions/checkout@v4

      - name: Generate files hash
        id: files-hash
        run: |
          DIR_HASH=$(echo -n ${{ hashFiles('backend/**', '.github/workflows/backend.yml') }})
          echo "DIR_HASH=$DIR_HASH" >> $GITHUB_ENV

      - name: Setup Docker metadata
        id: dockerMetadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.DIR_HASH }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=branch
            type=sha,prefix=commit-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if image exists
        id: check-image
        run: |
          EXISTS=$(docker manifest inspect ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DIR_HASH }} > /dev/null 2>&1 && echo "true" || echo "false")
          echo "CACHE_HIT=$EXISTS" >> $GITHUB_ENV

      - name: Set up JDK
        if: env.CACHE_HIT == 'false'
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "adopt"

      - name: Setup Gradle
        if: env.CACHE_HIT == 'false'
        uses: gradle/actions/setup-gradle@v3

      - name: Build Docker Image For Branch
        if: env.CACHE_HIT == 'false'
        run: ./gradlew bootBuildImage --imageName=${{ env.DOCKER_IMAGE_NAME }}:${{ env.DIR_HASH }}
        working-directory: ./backend
        env:
          USER: ${{ github.actor }}
          TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Push Docker Image
        if: env.CACHE_HIT == 'false'
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DIR_HASH }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Tag and push existing images
        run: |
          TAGS=(${{ steps.dockerMetadata.outputs.tags }})
          for TAG in "${TAGS[@]}"; do
            docker buildx imagetools create --tag $TAG ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DIR_HASH }}
          done
