name: preprocessing-dummy

on:
  push:
  workflow_dispatch:
    inputs:
      build_arm:
        type: boolean
        description: "Build for ARM as well"
        default: false
        required: false

env:
  DOCKER_IMAGE_NAME: ghcr.io/loculus-project/preprocessing-dummy
  BUILD_ARM: ${{ github.ref == 'refs/heads/main' || github.event.inputs.build_arm }} # When to build for arm as well

concurrency:
  group: ci-${{ github.ref == 'refs/heads/main' && github.run_id || github.ref }}-preprocessing-dummy
  cancel-in-progress: true

jobs:
  build-or-use-cache:
    name: Preprocessing dummy docker image build # Don't change: Referenced by .github/workflows/update-argocd-metadata.yml
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Generate files hash
        id: files-hash
        run: |
          DIR_HASH=$(echo -n ${{ hashFiles('preprocessing/dummy/**', '.github/workflows/dummyPreprocessing.yml') }})
          echo "DIR_HASH=$DIR_HASH${{ env.BUILD_ARM && '-arm'|| '' }}" >> $GITHUB_ENV

      - name: Setup Docker metadata
        id: dockerMetadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.DIR_HASH }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=branch
            type=sha,prefix=commit-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if image exists
        id: check-image
        run: |
          EXISTS=$(docker manifest inspect ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DIR_HASH }} > /dev/null 2>&1 && echo "true" || echo "false")
          echo "CACHE_HIT=$EXISTS" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        if: env.CACHE_HIT == 'false'
        uses: docker/build-push-action@v5
        with:
          context: ./preprocessing/dummy
          push: true
          tags: ${{ steps.dockerMetadata.outputs.tags }}
          cache-from: type=gha,scope=preprocessing-dummy-${{ github.ref }}
          cache-to: type=gha,mode=max,scope=preprocessing-dummy-${{ github.ref }}
          platforms: ${{ env.BUILD_ARM && 'linux/amd64,linux/arm64' || 'linux/amd64' }}

      - name: Tag and push image if cache hit
        if: env.CACHE_HIT == 'true'
        run: |
          TAGS=(${{ steps.dockerMetadata.outputs.tags }})
          for TAG in "${TAGS[@]}"; do
            docker buildx imagetools create --tag $TAG ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DIR_HASH }}
          done
