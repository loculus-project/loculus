{{- $dockerTag := include "loculus.dockerTag" .Values }}
{{- $keycloakTokenUrl := "http://loculus-keycloak-service:8083/realms/loculus/protocol/openid-connect/token" }}

{{- range $key, $organism := (include "loculus.enabledOrganisms" . | fromJson) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loculus-silo-{{ $key }}
  annotations:
    # Force replace when run a) with dev db and b) without persistence to ensure silo prepro fails loudly
    argocd.argoproj.io/sync-options: Replace=true{{ if (and (not $.Values.developmentDatabasePersistence) $.Values.runDevelopmentMainDatabase) }},Force=true{{ end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loculus
      component: silo-{{ $key }}
  template:
    metadata:
      annotations:
        timestamp: {{ now | quote }}
      labels:
        app: loculus
        component: silo-{{ $key }}
    spec:
      {{- include "possiblePriorityClassName" $ | nindent 6 }}
      initContainers:
        {{- include "loculus.configProcessor" (dict "name" "lapis-silo-database-config" "dockerTag" $dockerTag) | nindent 8 }}
      containers:
        - name: silo
          image: "{{ $.Values.images.lapisSilo.repository }}:{{ $.Values.images.lapisSilo.tag }}"
          imagePullPolicy: "{{ $.Values.images.lapisSilo.pullPolicy }}"
          {{- include "loculus.resources" (list "silo" $.Values $key) | nindent 10 }}
          ports:
            - containerPort: 8081
          args:
            - "api"
            - "--api-threads-for-http-connections"
            - {{ default 16 (($.Values.silo).apiThreadsForHttpConnections) | quote }}
            - "--api-max-queued-http-connections"
            - "1000"
            - "--query-materialization-cutoff"
            - "3276"
          volumeMounts:
            - name: lapis-silo-shared-data
              mountPath: /data
          readinessProbe:
            httpGet:
              path: /info
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 5
        - name: silo-preprocessing
          image: "{{ $.Values.images.lapisSilo.repository }}:{{ $.Values.images.lapisSilo.tag }}"
          imagePullPolicy: "{{ $.Values.images.lapisSilo.pullPolicy }}"
          {{- include "loculus.resources" (list "silo-preprocessing" $.Values) | nindent 10 }}
          command:
            - sh
            - -c
            - |
              apt-get update && apt-get install -y zstd && sh /silo_import_wrapper.sh
          env:
            - name: BACKEND_BASE_URL
              {{- if $.Values.disableBackend }}
              value: "http://host.k3d.internal:8079/{{ $key }}"
              {{- else }}
              value: "http://loculus-backend-service:8079/{{ $key }}"
              {{- end }}
            {{- if $organism.schema }}
            {{- $schema := $organism.schema | include "loculus.patchMetadataSchema" | fromYaml }}
            {{- $lineageSystems := list }}
            {{- range $entry := $schema.metadata }}
              {{- if hasKey $entry "lineageSystem" }}
                {{- $lineageSystems = append $lineageSystems $entry.lineageSystem }}
              {{- end }}
            {{- end }}
            {{- $uniqueLineageSystems := $lineageSystems | uniq }}
            {{- if gt (len $uniqueLineageSystems) 1 }}
              {{- fail (printf "Multiple lineage systems found for organism %s: %v. Only one lineage system per organism is currently supported." $key $uniqueLineageSystems) }}
            {{- end }}
            {{- range $lineageSystem := $uniqueLineageSystems }}
              {{- $lineageDefinitionsMap := dict }}
              {{- $missingVersions := list }}
              {{- $flattened := include "loculus.flattenPreprocessingVersions" $organism.preprocessing | fromJson }}
              {{- range $preprocessing := $flattened.items }}
                {{- if and $preprocessing.lineageDefinitions (hasKey $preprocessing.lineageDefinitions $lineageSystem) }}
                  {{- $lineageDefinitionsMap = set $lineageDefinitionsMap (printf "%d" (int $preprocessing.version)) (index $preprocessing.lineageDefinitions $lineageSystem) }}
                {{- else }}
                  {{- $missingVersions = append $missingVersions $preprocessing.version }}
                {{- end }}
              {{- end }}
              {{- if $missingVersions }}
                {{- fail (printf "Organism %s uses lineage system '%s' but preprocessing versions %v are missing lineageDefinitions for this system" $key $lineageSystem $missingVersions) }}
              {{- end }}
              {{- if $lineageDefinitionsMap }}
            - name: LINEAGE_DEFINITIONS
              value: {{ $lineageDefinitionsMap | toJson | quote }}
              {{- end }}
            {{- end }}
            {{- end }}
          volumeMounts:
            - name: lapis-silo-database-config-processed
              mountPath: /preprocessing/input/reference_genomes.json
              subPath: reference_genomes.json
            - name: lapis-silo-database-config-processed
              mountPath: /preprocessing/input/database_config.yaml
              subPath: database_config.yaml
            - name: lapis-silo-database-config-processed
              mountPath: /app/preprocessing_config.yaml
              subPath: preprocessing_config.yaml
            - name: lapis-silo-shared-data
              mountPath: /preprocessing/output
            - name: lapis-silo-input-data-cache
              mountPath: /preprocessing/input
            - name: lapis-silo-database-config-processed
              mountPath: /silo_import_job.sh
              subPath: silo_import_job.sh
            - name: lapis-silo-database-config-processed
              mountPath: /silo_import_wrapper.sh
              subPath: silo_import_wrapper.sh
      volumes:
        {{- include "loculus.configVolume" (dict "name" "lapis-silo-database-config" "configmap" (printf "lapis-silo-database-config-%s" $key)) | nindent 8 }}
        - name: lapis-silo-shared-data
          emptyDir: {}
        - name: lapis-silo-input-data-cache
          emptyDir: {}
{{- end }}