{{- $dockerTag := include "loculus.dockerTag" .Values }}
{{- if not .Values.disableBackend }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loculus-backend
  annotations:
    argocd.argoproj.io/sync-options: Replace=true
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loculus
      component: backend
  template:
    metadata:
      labels:
        app: loculus
        component: backend
    spec:
      initContainers:
{{- include "loculus.configProcessor" (dict "name" "loculus-backend-config" "dockerTag" $dockerTag) | nindent 8 }}
      containers:
        - name: backend
          image: "ghcr.io/loculus-project/backend:{{ $dockerTag }}"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: 8079
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: 8079
          ports:
            - containerPort: 8079
          args:
            - "--crossref.doi-prefix=$(CROSSREF_DOI_PREFIX)"
            - "--crossref.endpoint=$(CROSSREF_TEST_ENDPOINT)"
            - "--crossref.username=$(CROSSREF_USERNAME)"
            - "--crossref.password=$(CROSSREF_TEST_PASSWORD)"
            - "--keycloak.password=$(BACKEND_KEYCLOAK_PASSWORD)"
            - "--keycloak.realm=loculus"
            - "--keycloak.client=backend-client"
            - "--keycloak.url=http://loculus-keycloak-service:8083"
            - "--keycloak.user=backend"
            - "--spring.datasource.password=$(DB_PASSWORD)"
            - "--spring.datasource.url=$(DB_URL)"
            - "--spring.datasource.username=$(DB_USERNAME)"
            - "--spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://loculus-keycloak-service:8083/realms/loculus/protocol/openid-connect/certs"
          env:
          {{- if .Values.enableCrossRefCredentials }}
            - name: CROSSREF_USERNAME
              valueFrom:
               secretKeyRef:
                 name: crossref
                 key: username
            - name: CROSSREF_TEST_PASSWORD
              valueFrom:
               secretKeyRef:
                 name: crossref
                 key: testPassword
            - name: CROSSREF_LIVE_PASSWORD
              valueFrom:
               secretKeyRef:
                 name: crossref
                 key: livePassword
           {{- end }}
            - name: BACKEND_KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: service-accounts
                  key: backendUserPassword
            - name: DB_URL
              valueFrom:
               secretKeyRef:
                 name: database
                 key: url
            - name: DB_USERNAME
              valueFrom:
               secretKeyRef:
                 name: database
                 key: username
            - name: DB_PASSWORD
              valueFrom:
               secretKeyRef:
                 name: database
                 key: password
          volumeMounts:
            - name: loculus-backend-config-processed
              mountPath: /config
      volumes:
{{ include "loculus.configVolume" (dict "name" "loculus-backend-config") | nindent 8 }}
{{- end }}