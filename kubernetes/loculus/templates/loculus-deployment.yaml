{{- $dockerTag := include "loculus.dockerTag" .Values }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loculus
  annotations:
    argocd.argoproj.io/sync-options: Replace=true
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loculus
      component: website-and-backend
  template:
    metadata:
      labels:
        app: loculus
        component: website-and-backend
    spec:
      initContainers:
{{- include "loculus.configProcessor" (dict "name" "loculus-website-config" "dockerTag" $dockerTag) | nindent 8 }}
{{- include "loculus.configProcessor" (dict "name" "loculus-backend-config" "dockerTag" $dockerTag) | nindent 8 }}
      containers:
        {{- if not .Values.disableWebsite }}
        - name: website
          image: "{{ if $.Values.customWebsiteImage }}{{ $.Values.customWebsiteImage }}{{ else }}ghcr.io/loculus-project/website:{{ $dockerTag }}{{ end }}"
          imagePullPolicy: Always
          resources:
            requests:
              memory: "1300Mi"
              cpu: "100m"
            limits:
              memory: "2000Mi"
              cpu: "1000m"
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: loculus-website-config-processed
              mountPath: /config
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
        {{- end }}
        {{- if not .Values.disableBackend }}
        - name: backend
          image: "ghcr.io/loculus-project/backend:{{ $dockerTag }}"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: 8079
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: 8079
          ports:
            - containerPort: 8079
          args:
            - "--spring.datasource.url=$(DB_URL)"
            - "--spring.datasource.username=$(DB_USERNAME)"
            - "--spring.datasource.password=$(DB_PASSWORD)"
            - "--keycloak.user=backend"
            - "--keycloak.password=backend"
            - "--keycloak.realm=loculus"
            - "--keycloak.client=test-cli"
            - "--keycloak.url=http://loculus-keycloak-service:8083"
            - "--spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://loculus-keycloak-service:8083/realms/loculus/protocol/openid-connect/certs"
          env:
           {{- if .Values.externalDatabase.urlSealedSecret }}
            - name: DB_URL
              valueFrom:
               secretKeyRef:
                 name: externaldb-credentials
                 key: url
           {{- else }}
            - name: DB_URL
              value: "jdbc:postgresql://localhost:5432/loculus"
           {{- end }}
           {{- if .Values.externalDatabase.usernameSealedSecret }}
            - name: DB_USERNAME
              valueFrom:
               secretKeyRef:
                 name: externaldb-credentials
                 key: username
           {{- else }}
            - name: DB_USERNAME
              value: "postgres"
           {{- end }}
           {{- if .Values.externalDatabase.passwordSealedSecret }}
            - name: DB_PASSWORD
              valueFrom:
               secretKeyRef:
                 name: externaldb-credentials
                 key: password
           {{- else }}
            - name: DB_PASSWORD
              value: "password"
           {{- end }}
          volumeMounts:
            - name: loculus-backend-config-processed
              mountPath: /config
        {{- end }}
        {{- if not .Values.externalDatabaseUrl }}
        - name: database
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "unsecure"
            - name: POSTGRES_DB
              value: "loculus"
        {{- end }}

      imagePullSecrets:
        - name: ghcr-secret
        - name: custom-website-sealed-secret
      volumes:
{{ include "loculus.configVolume" (dict "name" "loculus-website-config") | nindent 8 }}
{{ include "loculus.configVolume" (dict "name" "loculus-backend-config") | nindent 8 }}
