{{/* Common metadata fields are metadata fields that are required for all organisms
for Loculus to work.
In almost all cases (except for versionComment), these fields are not supposed to
be input by the user but are instead generated by the system.
They are defined here so that they can't be misconfigured in values.yaml.
Beware: if a field here is supposed to be user submitted and preprocessed, you need
it's not enough to add the field here, you need to add it in other places.
See https://github.com/loculus-project/loculus/pull/3141 for an example */}}
{{- define "loculus.commonMetadata" }}
fields:
  - name: accessionVersion
    type: string
    notSearchable: true
    hideOnSequenceDetailsPage: true
    includeInDownloadsByDefault: true
  - name: accession
    type: string
    hideOnSequenceDetailsPage: true
    multiEntryTextSearch: true
  - name: version
    type: int
    notSearchable: true
    hideOnSequenceDetailsPage: true
  - name: submissionId
    displayName: Submission ID
    type: string
    header: Submission details
    orderOnDetailsPage: 5000
    enableSubstringSearch: true
    includeInDownloadsByDefault: true
  - name: isRevocation
    displayName: Is revocation
    type: boolean
    autocomplete: true
    hideOnSequenceDetailsPage: true
  - name: submitter
    type: string
    generateIndex: true
    autocomplete: true
    hideOnSequenceDetailsPage: true
    header: Submission details
    orderOnDetailsPage: 5010
  - name: groupName
    type: string
    generateIndex: true
    autocomplete: true
    header: Submission details
    displayName: Submitting group
    includeInDownloadsByDefault: true
    orderOnDetailsPage: 5020
    customDisplay:
      type: submittingGroup
      displayGroup: group
  - name: groupId
    displayName: Group ID
    type: int
    autocomplete: true
    header: Submission details
    displayName: Submitting group (numeric ID)
    orderOnDetailsPage: 5030
    customDisplay:
      type: submittingGroup
      displayGroup: group
  - name: submittedAtTimestamp
    type: timestamp
    displayName: Date submitted
    header: Submission details
    orderOnDetailsPage: 5040
  - name: submittedDate
    type: string
    hideOnSequenceDetailsPage: true
    generateIndex: true
    autocomplete: true
    displayName: Date submitted (exact)
    orderOnDetailsPage: 5050
  - name: releasedAtTimestamp
    type: timestamp
    displayName: Date released
    header: Submission details
    columnWidth: 100
    orderOnDetailsPage: 5060
  - name: releasedDate
    type: string
    hideOnSequenceDetailsPage: true
    generateIndex: true
    autocomplete: true
    displayName: Date released (exact)
    columnWidth: 100
    orderOnDetailsPage: 5070
  {{- if $.Values.dataUseTerms.enabled }}
  - name: dataUseTerms
    type: string
    generateIndex: true
    autocomplete: true
    displayName: Data use terms
    initiallyVisible: true
    includeInDownloadsByDefault: true
    customDisplay:
      type: dataUseTerms
    header: Data use terms
    orderOnDetailsPage: 610
  - name: dataUseTermsRestrictedUntil
    type: date
    displayName: Data use terms restricted until
    hideOnSequenceDetailsPage: true
    header: Data use terms
    orderOnDetailsPage: 620
  {{- if $.Values.dataUseTerms.urls }}
  - name: dataUseTermsUrl
    displayName: Data use terms URL
    type: string
    notSearchable: true
    header: Data use terms
    includeInDownloadsByDefault: true
    customDisplay:
      type: link
      url: "__value__"
    orderOnDetailsPage: 630
  {{- end}}
  {{- end}}
  - name: versionStatus
    displayName: Version status
    type: string
    autocomplete: true
    hideOnSequenceDetailsPage: true
  - name: versionComment
    type: string
    displayName: Version comment
    header: Submission details
    orderOnDetailsPage: 5000
  - name: pipelineVersion
    type: int
    notSearchable: true
    hideOnSequenceDetailsPage: true
{{- end}}

{{/* Patches schema by adding to it and overwriting overlapping fields by the value in metadataAdd*/}}
{{- define "loculus.patchMetadataSchema" -}}
{{- $patchedSchema := deepCopy . }}
{{- $metadata := .metadata | default (list) }}
{{- $toAdd := . | dig "metadataAdd" list | default (list) }}
{{- $metadataMap := dict -}}
{{- range $metadata }}
  {{- $key := .name }}
  {{- $metadataMap = merge $metadataMap (dict $key .) -}}
{{- end -}}
{{- range $toAdd }}
  {{- $key := .name }}
  {{- $metadataMap = merge $metadataMap (dict $key .) -}}
{{- end -}}
{{- $patchedMetadata := list -}}
{{- range $key, $value := $metadataMap }}
  {{- $patchedMetadata = append $patchedMetadata $value -}}
{{- end -}}
{{- set $patchedSchema "metadata" $patchedMetadata | toYaml -}}
{{- end -}}

{{/* Generate website config from passed config object */}}
{{- define "loculus.generateWebsiteConfig" }}
name: {{ quote $.Values.name }}
logo: {{ $.Values.logo | toYaml | nindent 6 }}
{{ if $.Values.sequenceFlagging }}
sequenceFlagging: {{ $.Values.sequenceFlagging | toYaml | nindent 6 }}
{{ end }}
{{ if $.Values.gitHubMainUrl }}
gitHubMainUrl: {{ quote $.Values.gitHubMainUrl }}
{{ end }}
{{ if $.Values.bannerMessageURL }}
bannerMessageURL: {{ quote $.Values.bannerMessageURL }}
{{ end }}
{{ if $.Values.bannerMessage }}
bannerMessage: {{ quote $.Values.bannerMessage }}
{{ else if or $.Values.runDevelopmentMainDatabase $.Values.runDevelopmentKeycloakDatabase }}
bannerMessage: "Warning: Development or Keycloak main database is enabled. Development environment only."
{{ end }}
{{ if $.Values.gitHubEditLink }}
gitHubEditLink: {{ quote $.Values.gitHubEditLink }}
{{ end }}
{{ if $.Values.welcomeMessageHTML }}
welcomeMessageHTML: {{ quote $.Values.welcomeMessageHTML }}
{{end}}
{{ if $.Values.additionalHeadHTML }}
additionalHeadHTML: {{ quote $.Values.additionalHeadHTML }}
{{end}}

enableLoginNavigationItem: {{ $.Values.website.websiteConfig.enableLoginNavigationItem }}
enableSubmissionNavigationItem: {{ $.Values.website.websiteConfig.enableSubmissionNavigationItem }}
enableSubmissionPages: {{ $.Values.website.websiteConfig.enableSubmissionPages }}
enableSeqSets: {{ $.Values.seqSets.enabled }}
{{- if $.Values.seqSets.fieldsToDisplay }}
seqSetsFieldsToDisplay: {{ $.Values.seqSets.fieldsToDisplay | toJson }}
{{- end }}
enableDataUseTerms: {{ $.Values.dataUseTerms.enabled }}
accessionPrefix: {{ quote $.Values.accessionPrefix }}
{{- $commonMetadata := (include "loculus.commonMetadata" . | fromYaml).fields }}
organisms:
  {{- range $key, $instance := (include "loculus.enabledOrganisms" . | fromJson) }}
  {{ $key }}:
    schema:
      {{- with ($instance.schema | include "loculus.patchMetadataSchema" | fromYaml) }}
      organismName: {{ quote .organismName }}
      {{ if .linkOuts }}
      linkOuts:
        {{- range $linkOut := .linkOuts }}
        - name: {{ quote $linkOut.name }}
          url: {{ quote $linkOut.url }}
          {{- if $linkOut.maxNumberOfRecommendedEntries }}
          maxNumberOfRecommendedEntries: {{ $linkOut.maxNumberOfRecommendedEntries }}
          {{- end }}
        {{- end }}
      {{- end }}
      loadSequencesAutomatically: {{ .loadSequencesAutomatically | default false }}
      {{ if .richFastaHeaderFields}}
      richFastaHeaderFields: {{ toJson .richFastaHeaderFields }}
      {{ end }}
      {{- include "loculus.submissionDataTypes" . | nindent 6 }}
      {{- $nucleotideSequences := .nucleotideSequences | default (list "main")}}
      {{ if .image }}
      image: {{ .image }}
      {{ end }}
      {{ if .description }}
      description: {{ quote .description }}
      {{ end }}
      primaryKey: accessionVersion
      inputFields: {{- include "loculus.inputFields" . | nindent 8 }}
        - name: versionComment
          displayName: Version comment
          definition: "Reason for revising sequences or other general comments concerning a specific version"
          example: "Fixed an issue in previous version where low-coverage nucleotides were erroneously filled with reference sequence"
          desired: true
      {{ if .files }}
      files: {{ .files | toYaml | nindent 8 }}
      {{ end }}
      metadata:
        {{- $args := dict "metadata" (concat $commonMetadata .metadata) "nucleotideSequences" $nucleotideSequences}}
        {{ $metadata := include "loculus.generateWebsiteMetadata" $args | fromYaml }}
        {{ $metadata.fields | toYaml | nindent 8 }}
        {{ if .files }}
        {{- range .files }}
        - name: {{ .name }}
          type: string
          header: "Files"
          noInput: true
          customDisplay:
            type: fileList
        {{- end }}
        {{ end }}
      {{ if .metadataTemplate }}
      metadataTemplate:
        {{ .metadataTemplate | toYaml | nindent 8}}
      {{ end }}
      {{ .website | toYaml | nindent 6 }}
      {{- end }}
    referenceGenomes:
      {{ $instance.referenceGenomes | toYaml | nindent 6 }}
  {{- end }}
{{- end }}

{{- define "loculus.standardWebsiteMetadata" }}
- type: {{ .type | default "string" | quote }}
  {{- if .autocomplete }}
  autocomplete: {{ .autocomplete }}
  {{- end }}
  {{- if .enableSubstringSearch }}
  substringSearch: {{ .enableSubstringSearch }}
  {{- end}}
  {{- if .notSearchable }}
  notSearchable: {{ .notSearchable }}
  {{- end }}
  {{- if .initiallyVisible }}
  initiallyVisible: {{ .initiallyVisible }}
  {{- end }}
  {{- if .hideInSearchResultsTable }}
  hideInSearchResultsTable: {{ .hideInSearchResultsTable }}
  {{- end }}
  {{- if or (or (eq .type "timestamp") (eq .type "date")) .rangeSearch }}
  rangeSearch: true
  {{- end }}
  {{- if .rangeOverlapSearch }}
  rangeOverlapSearch: {{ .rangeOverlapSearch | toJson }}
  {{- end}}
  {{- if .lineageSystem }}
  lineageSearch: true
  {{- end }}
  {{- if .hideOnSequenceDetailsPage }}
  hideOnSequenceDetailsPage: {{ .hideOnSequenceDetailsPage }}
  {{- end }}
  {{- if .columnWidth }}
  columnWidth: {{ .columnWidth }}
  {{- end }}
  {{- if .order }}
  order: {{ .order }}
  {{- end }}
  {{- if .orderOnDetailsPage }}
  orderOnDetailsPage: {{ .orderOnDetailsPage }}
  {{- end }}
  {{- if .includeInDownloadsByDefault }}
  includeInDownloadsByDefault: {{ .includeInDownloadsByDefault }}
  {{- end }}
  {{- if .multiEntryTextSearch }}
  multiEntryTextSearch: {{ .multiEntryTextSearch }}
  {{- end }}
  {{- if .customDisplay }}
  customDisplay:
    type: {{ quote .customDisplay.type }}
    {{- if .customDisplay.url }}
    url: {{ .customDisplay.url }}
    {{- end }}
    {{- if .customDisplay.linkMenuItems }}
    linkMenuItems:
      {{- range .customDisplay.linkMenuItems }}
      - name: {{ quote .name }}
        url: {{ quote .url }}
      {{- end }}
    {{- end }}
    {{- if .customDisplay.displayGroup }}
    displayGroup: {{ quote .customDisplay.displayGroup }}
    {{- end }}
    {{- if .customDisplay.html }}
    html: {{ .customDisplay.html }}
    {{- end }}
  {{- end }}
{{- end }}

{{/* Generate website metadata from passed metadata array */}}
{{- define "loculus.generateWebsiteMetadata" }}
fields:
{{- $metadataList := .metadata }}
{{/* A segmented organism is defined by having more than 1 segment */}}
{{- $segments := .nucleotideSequences }}
{{- $is_segmented := gt (len $segments) 1 }}
{{- range $metadataList }}
{{- if and $is_segmented .perSegment }}
{{- $currentItem := . }}
{{- range $segment := $segments }}
{{- with $currentItem }}
{{ include "loculus.standardWebsiteMetadata" . }}
  name: {{ printf "%s_%s" .name $segment | quote }}
  {{- if .displayName }}
  displayName: {{ printf "%s %s" .displayName $segment | quote }}
  {{- end }}
  {{- if (default false .oneHeader)}}
  header: {{ (default "Other" .header) | quote }}
  {{- else }}
  header: {{ printf "%s %s" (default "Other" .header) $segment | quote }}
  {{- end }}
{{- end }}
{{- end }}
{{- else }}
{{ include "loculus.standardWebsiteMetadata" . }}
  name: {{ quote .name }}
  {{- if .displayName }}
  displayName: {{ quote .displayName }}
  {{- end }}
  header: {{ default "Other" .header }}
{{- end}}
{{- end}}
{{- end}}

{{/* Generate backend config from passed config object */}}
{{- define "loculus.generateBackendConfig" }}
accessionPrefix: {{ quote $.Values.accessionPrefix }}
name: {{ quote $.Values.name }}
dataUseTerms:
  {{$.Values.dataUseTerms | toYaml | nindent 2}}
{{- if .Values.fileSharing }}
fileSharing:
  {{ .Values.fileSharing | toYaml | nindent 2 }}
{{- end }}
websiteUrl: {{ include "loculus.websiteUrl" . }}
backendUrl: {{ include "loculus.backendUrl" . }}
organisms:
  {{- range $key, $instance := (include "loculus.enabledOrganisms" . | fromJson) }}
  {{ $key }}:
    schema:
      {{- with $instance.schema }}
      {{- $nucleotideSequences := .nucleotideSequences | default (list "main")}}
      organismName: {{ quote .organismName }}
      {{- include "loculus.submissionDataTypes" . | nindent 6 }}
      {{- if .files }}
      files:
        {{ .files | toYaml | nindent 8 }}
      {{- end }}
      metadata:
        {{- $args := dict "metadata" (include "loculus.patchMetadataSchema" . | fromYaml).metadata "nucleotideSequences" $nucleotideSequences}}
        {{ $metadata := include "loculus.generateBackendMetadata" $args | fromYaml }}
        {{ $metadata.fields | toYaml | nindent 8 }}
      externalMetadata:
        {{- $args := dict "metadata" (include "loculus.patchMetadataSchema" . | fromYaml).metadata "nucleotideSequences" $nucleotideSequences}}
        {{ $metadata := include "loculus.generateBackendExternalMetadata" $args | fromYaml }}
        {{ $metadata.fields | default list | toYaml | nindent 8 }}
      earliestReleaseDate:
      {{- if .earliestReleaseDate }}
        {{ .earliestReleaseDate | toYaml | nindent 8 }}
      {{- else }}
        enabled: false
        externalFields: []
      {{- end }}
      {{- end }}
    referenceGenome:
      {{- $referenceGenome := include "loculus.mergeReferenceGenomes" $instance.referenceGenomes | fromYaml }}
      {{ $referenceGenome | toYaml | nindent 10 }}
  {{- end }}
{{- end }}

{{- define "loculus.generateReferenceGenome" }}
{{ if .nucleotideSequences }}
nucleotideSequences:
  {{ $nucleotideSequences := include "loculus.generateSequences" .nucleotideSequences | fromYaml }}
  {{ $nucleotideSequences.fields | toYaml | nindent 8 }}
{{ else }}
nucleotideSequences: []
{{ end }}
{{ if .genes }}
genes:
  {{ $genes := include "loculus.generateSequences" .genes | fromYaml }}
  {{ $genes.fields | toYaml | nindent 8 }}
{{ else }}
genes: []
{{ end }}
{{- end }}

{{- define "loculus.generateSequences" }}
{{- $sequences := . }}
fields:
  {{- range $sequence := $sequences }}
    - name: {{ printf "%s" $sequence.name | quote}}
      sequence: {{ printf "%s" $sequence.sequence | quote }}
  {{- end }}
{{- end }}

{{/* Generate backend metadata from passed metadata array */}}
{{- define "loculus.generateBackendMetadata" }}
fields:
{{- $metadataList := .metadata }}
{{- $segments := .nucleotideSequences }}
{{- $is_segmented := gt (len $segments) 1 }}
{{- range $metadataList }}
{{- $currentItem := . }}
{{- if and $is_segmented .perSegment }}
{{- range $segment := $segments }}
{{- with $currentItem }}
  - name: {{ printf "%s_%s" .name $segment | quote }}
    type: {{ .type | default "string" | quote }}
    {{- if .multiEntryTextSearch }}
    multiEntryTextSearch: {{ .multiEntryTextSearch }}
    {{- end }}
{{- end }}
{{- end}}
{{- else }}
  - name: {{ quote .name }}
    type: {{ .type | default "string" | quote }}
    {{- if .multiEntryTextSearch }}
    multiEntryTextSearch: {{ .multiEntryTextSearch }}
    {{- end }}
{{- end}}
{{- end}}
  - name: versionComment
    type: "string"
{{- end}}

{{/* Generate backend metadata from passed metadata array */}}
{{- define "loculus.generateBackendExternalMetadata" }}
fields:
{{- $metadataList := .metadata }}
{{- $segments := .nucleotideSequences }}
{{- $is_segmented := gt (len $segments) 1 }}
{{- range $metadataList }}
{{- $currentItem := . }}
{{- if eq .header "INSDC" }}
{{- if and $is_segmented .perSegment }}
{{- range $segment := $segments }}
{{- with $currentItem }}
  - name: {{ printf "%s_%s" .name $segment | quote }}
    type: {{ .type | default "string" | quote }}
    {{- if .required }}
    required: {{ .required }}
    {{- end }}
    externalMetadataUpdater: "ena"
{{- end }}
{{- end}}
{{- else }}
  - name: {{ quote .name }}
    type: {{ .type | default "string" | quote }}
    {{- if .required }}
    required: {{ .required }}
    {{- end }}
    externalMetadataUpdater: "ena"
{{- end}}
{{- end}}
{{- end}}
{{- end}}

{{- define "loculus.publicRuntimeConfig" }}
{{- $publicRuntimeConfig := $.Values.public }}
{{- $lapisUrlTemplate := "" }}
{{- if $publicRuntimeConfig.lapisUrlTemplate }}
  {{- $lapisUrlTemplate = $publicRuntimeConfig.lapisUrlTemplate }}
{{- else if eq $.Values.environment "server" }}
  {{- $lapisUrlTemplate = printf "https://lapis%s%s/%s" $.Values.subdomainSeparator $.Values.host "%organism%" }}
{{- else }}
  {{- $lapisUrlTemplate = printf "http://%s:8080/%%organism%%" $.Values.localHost }}
{{- end }}
{{- $externalLapisUrlConfig := dict "lapisUrlTemplate" $lapisUrlTemplate "config" $.Values }}
            "backendUrl": "{{ include "loculus.backendUrl" . }}",
            "lapisUrls": {{- include "loculus.generateExternalLapisUrls" $externalLapisUrlConfig | fromYaml | toJson }},
            "keycloakUrl":  "{{ include "loculus.keycloakUrl" . }}"
{{- end }}


{{/* Generate ENA submission config from passed config object */}}
{{- define "loculus.generateENASubmissionConfig" }}
organisms:
  {{- range $key, $instance := (include "loculus.enabledOrganisms" . | fromJson) }}
  {{- if $instance.ingest }}
  {{ $key }}:
    {{- with $instance.schema }}
    {{- $nucleotideSequences := .nucleotideSequences | default (list "main")}}
    enaDeposition: {{- $instance.enaDeposition.configFile | toYaml | nindent 6 }}
    organismName: {{ quote .organismName }}
    externalMetadata:
      {{- $args := dict "metadata" (include "loculus.patchMetadataSchema" . | fromYaml).metadata "nucleotideSequences" $nucleotideSequences}}
      {{-  $metadata := include "loculus.generateBackendExternalMetadata" $args | fromYaml }}
      {{- $metadata.fields | default list | toYaml | nindent 6 }}
    {{- end }}
  {{- end }}
  {{- end }}
{{- end }}
