{{- if and .Values.s3.enabled .Values.runDevelopmentS3 }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-policies
data:
  policy.json: |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Action": "s3:GetObject",
          "Resource": "arn:aws:s3:::loculus-preview-private/*",
          "Principal": "*",
          "Condition": {
            "StringEquals": {
              "s3:ExistingObjectTag/public": "true"
            }
          }
        }
      ]
    }
  cors.xml: |
    <CORSConfiguration>
      <CORSRule>
        <AllowedHeaders>*</AllowedHeaders>
        <AllowedMethod>GET</AllowedMethod>
        <AllowedMethod>HEAD</AllowedMethod>
        <AllowedMethod>POST</AllowedMethod>
        <AllowedMethod>PUT</AllowedMethod>
        <AllowedMethod>DELETE</AllowedMethod>
        <AllowedOrigin>*</AllowedOrigin>
      </CORSRule>
    </CORSConfiguration>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      volumes:
        - name: policy-volume
          configMap:
            name: minio-policies
      containers:
        - name: minio
          image: minio/minio:latest
          args: ["server", "/data"]
          ports:
            - containerPort: 9000
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: s3-bucket
                  key: accessKey
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: s3-bucket
                  key: secretKey
        - name: minio-init
          image: minio/mc
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for MinIO to be ready..."
              until mc alias set local http://minio:9000 "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD"; do
                echo "MinIO not ready yet. Retrying in 5s..."
                sleep 5
              done
              echo "MinIO is ready!"
              mc mb -p local/{{ .Values.s3.bucket.bucket }} || true
              echo "Bucket {{ .Values.s3.bucket.bucket }} ensured."
              mc cors set local/{{ .Values.s3.bucket.bucket }} /policy/cors.xml
              tail -f /dev/null
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: s3-bucket
                  key: accessKey
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: s3-bucket
                  key: secretKey
          volumeMounts:
            - name: policy-volume
              mountPath: /policy
      restartPolicy: Always
{{- end }}
