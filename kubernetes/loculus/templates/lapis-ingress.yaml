{{- $lapisHost := printf "lapis%s%s" .Values.subdomainSeparator .Values.host }}
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: cors-all-origins
spec:
  headers:
    accessControlAllowMethods:
      - "GET"
      - "OPTIONS"
      - "POST"
      - "HEAD"
    accessControlAllowOriginList: 
      - "*"
    accessControlMaxAge: 100
    accessControlAllowHeaders:
      - "*"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lapis-ingress
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: "{{ $.Release.Namespace }}-cors-all-origins@kubernetescrd,{{- $first := true }}{{- range $key, $_ := (.Values.organisms | default .Values.defaultOrganisms) }}{{ if $first }}{{ $first = false }}{{ else }},{{ end }}{{ $.Release.Namespace }}-strip-{{ $key }}-prefix@kubernetescrd{{- end }}"
spec:
  rules:
  - host: {{ if eq $.Values.environment "server" }}{{ $lapisHost }}{{ end }}
    http:
      paths:
      {{- range $key, $_ := (.Values.organisms | default .Values.defaultOrganisms) }}
      - path: /{{ $key }}/
        pathType: Prefix
        backend:
          service:
            name: {{ template "loculus.lapisServiceName" $key }}
            port:
              number: 8080
        {{- if eq $.Values.environment "server" }}
        pathType: ImplementationSpecific
        {{- end }}
      {{- end }}
  {{- if eq $.Values.environment "server" }}
  tls:
  - hosts:
    - {{ $lapisHost }}
  {{- end }}


{{- range $key, $_ := (.Values.organisms | default .Values.defaultOrganisms) }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: strip-{{ $key }}-prefix
spec:
  stripPrefix:
    prefixes:
      - /{{ $key }}/
{{- end }}
