{{- if eq .Values.mode "cd" }}
{{- $backendHost := printf "backend.%s" .Values.host }}
{{- $lapisHost := printf "lapis.%s" .Values.host }}

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  creationTimestamp: '2023-10-24T13:00:51Z'
  name: pathoplexus-website-ingressroute
  namespace: {{ .Values.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    link.argocd.argoproj.io/external-link: https://{{ .Values.host }}
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`{{ .Values.host }}`)
      priority: 10
      services:
        - name: pathoplexus-website-service
          port: 3000
  tls:
    certResolver: myresolver
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  creationTimestamp: '2023-10-24T13:00:51Z'
  name: pathoplexus-backend-ingressroute
  namespace: {{ .Values.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    link.argocd.argoproj.io/external-link: https://{{ $backendHost }}
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`{{ $backendHost }}`)
      priority: 10
      services:
        - name: pathoplexus-backend-service
          port: 8079
  tls:
    certResolver: myresolver
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: pathoplexus-lapis-ingressroute
  namespace: {{ .Values.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    link.argocd.argoproj.io/external-link: https://{{ $lapisHost }}
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`{{ $lapisHost }}`)
      priority: 10
      services:
        - name: pathoplexus-lapis-service
          port: 8080
  tls:
    certResolver: myresolver
{{- end }}
