{{- $lapisHost := printf "lapis.%s" .Values.host }}
{{- $environment := .Values.environment }}
{{- $configFile := .Files.Get "config.yaml" | fromYaml }}
{{- $namespace := .Values.namespace }}
{{- range $key, $_ := $configFile.instances }}

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: lapis-ingressroute-{{ $key }}
  namespace: {{ $namespace }}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
{{- if eq $environment "server" }}
    link.argocd.argoproj.io/external-link: https://{{ $lapisHost }}
{{- end }}
spec:
  entryPoints:
    {{- if eq $environment "server" }}
    - websecure
    {{- else }}
    - web
    {{- end }}
  routes:
  - match: Path(`/{{ $key }}`, `/{{ $key }}/{path:.*}`) {{- if eq $environment "server" }} && Host(`{{ $lapisHost }}`){{- end }}
    kind: Rule
    services:
    - name: {{ template "pathoplexus.lapisServiceName" $key }}
      port: 8080
    middlewares:
    - name: strip-{{ $key }}-prefix
{{- if eq $environment "server" }}
  tls:
    certResolver: myresolver
{{- end }}

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: strip-{{ $key }}-prefix
  namespace: {{ $namespace }}
spec:
  stripPrefix:
    prefixes:
      - /{{ $key }}
{{- end }}
