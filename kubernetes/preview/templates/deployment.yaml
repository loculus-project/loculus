{{- $dockerTag := (eq (.Values.branch | default "main") "main") | ternary "latest" .Values.branch -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pathoplexus
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pathoplexus
  template:
    metadata:
      labels:
        app: pathoplexus
    spec:
      initContainers:
{{- if ne .Values.mode "e2e" }}
        - name: get-repo
          image: alpine/git
          env:
            - name: GIT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: github-access-token
                  key: token
          command:
            - /bin/sh
            - -c
            - |
              git clone -b {{ .Values.branch }} https://tokenauth:$GIT_TOKEN@github.com/pathoplexus/pathoplexus.git /repo
          volumeMounts:
            - name: repo-volume
              mountPath: /repo
{{- end }}
        - name: silo-preprocessing
          image: ghcr.io/genspectrum/lapis-silo:latest
          args:
            - "--preprocessing"
          volumeMounts:
            - name: repo-volume
              mountPath: /preprocessing/input
              subPath: website/tests/initialSiloData
            - name: repo-volume
              mountPath: /preprocessing/input/reference_genomes.json
              subPath: website/tests/config/reference_genomes.json
            - name: repo-volume
              mountPath: /app/preprocessing_config.yaml
              subPath: website/tests/config/preprocessing_config.yaml
            - name: repo-volume
              mountPath: /app/database_config.yaml
              subPath: website/tests/config/database_config.yaml
            - name: repo-volume
              mountPath: /preprocessing/output
              subPath: website/tests/initialSiloData/processingOutput 

      containers:
        - name: website
          image: ghcr.io/pathoplexus/website:{{ $dockerTag }}
          imagePullPolicy: Always
          resources:
            requests:
              memory: "1300Mi"
              cpu: "100m"
            limits:
              memory: "2000Mi"
              cpu: "1000m"
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: repo-volume
              mountPath: /config
              subPath: website/tests/config
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
        - name: backend
          image: ghcr.io/pathoplexus/backend:{{ $dockerTag }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8079
          args:
            - "--spring.datasource.url=jdbc:postgresql://localhost:5432/pathoplexus"
            - "--spring.datasource.username=postgres"
            - "--spring.datasource.password=unsecure"
            - "--backend.config.path=/repo/website/tests/config/config.json"
            - "--backend.referenceGenome.path=/repo/website/tests/config/reference_genomes.json"
          volumeMounts:
            - name: repo-volume
              mountPath: /repo
        - name: database
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "unsecure"
            - name: POSTGRES_DB
              value: "pathoplexus"
        - name: silo
          image: ghcr.io/genspectrum/lapis-silo:latest
          ports:
            - containerPort: 8081
          args:
            - "--api"
          volumeMounts:
            - name: repo-volume
              mountPath: /data
              subPath: website/tests/initialSiloData/processingOutput
        - name: lapis
          image: ghcr.io/genspectrum/lapis-v2:latest
          ports:
            - containerPort: 8080
          args:
            - "--silo.url=http://localhost:8081"
          volumeMounts:
            - name: repo-volume
              mountPath: /workspace/database_config.yaml
              subPath: website/tests/config/database_config.yaml
            - name: repo-volume
              mountPath: /workspace/reference_genomes.json
              subPath: website/tests/config/reference_genomes.json
      imagePullSecrets:
        - name: ghcr-secret
      volumes:
        - name: repo-volume
{{- if ne .Values.mode "e2e" }}
          emptyDir: {}
{{- end }}
{{- if eq .Values.mode "e2e" }}
          hostPath:
            path: /repo
{{- end }}
