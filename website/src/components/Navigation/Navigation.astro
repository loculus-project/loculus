---
import { SandwichMenu } from './SandwichMenu.tsx';
import { cleanOrganism } from './cleanOrganism';
import { navigationItems } from '../../routes/navigationItems';
import { getAuthUrl } from '../../utils/getAuthUrl';

interface Props {
    implicitOrganism?: string;
}

const { implicitOrganism } = Astro.props;
const { organism, knownOrganisms } = cleanOrganism(Astro.params.organism);
const selectedOrganism =
    implicitOrganism !== undefined ? knownOrganisms.find((it) => it.key === implicitOrganism) : organism;

const isLoggedIn = Astro.locals.session?.isLoggedIn ?? false;

const loginUrl = await getAuthUrl(Astro.url.toString());
---

<div class='flex justify-end relative'>
    <div class='subtitle hidden md:flex md:z-6 gap-4'>
        {
            navigationItems
                .top(selectedOrganism?.key, isLoggedIn, loginUrl)
                .map(({ text, path }) => <a href={path}>{text}</a>)
        }
    </div>

    <div
        class='md:hidden z-0'
        style={{
            position: 'absolute',
            right: '1.5rem',
            top: '-2rem',
        }}
    >
        <SandwichMenu organism={selectedOrganism} isLoggedIn={isLoggedIn} loginUrl={loginUrl} client:load />
    </div>
</div>
