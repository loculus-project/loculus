---
import AccessionSearchBox from './AccessionSearchBox.tsx';
import { OrganismNavigation } from './OrganismNavigation.tsx';
import { NavigationTab } from './NavigationTab.tsx';
import { SandwichMenu } from './SandwichMenu.tsx';
import { cleanOrganism } from './cleanOrganism';
import { getWebsiteConfig } from '../../config';
import { navigationItems } from '../../routes/navigationItems';
import { getAuthUrl } from '../../utils/getAuthUrl';

interface Props {
    implicitOrganism?: string;
    gitHubMainUrl?: string;
    activeTopNavigationItem?: string;
}

const { implicitOrganism, gitHubMainUrl, activeTopNavigationItem } = Astro.props;
const { organism, knownOrganisms } = cleanOrganism(Astro.params.organism);
const selectedOrganism =
    implicitOrganism !== undefined ? knownOrganisms.find((it) => it.key === implicitOrganism) : organism;
const websiteConfig = getWebsiteConfig();
const siteName = websiteConfig.name;

const isLoggedIn = Astro.locals.session?.isLoggedIn ?? false;

const loginUrl = await getAuthUrl(Astro.url.toString());

const topNavigationItems = navigationItems.top(selectedOrganism?.key, isLoggedIn, loginUrl);
---

<div class='flex justify-end relative'>
    <div class='subtitle hidden lg:flex lg:z-6 items-center gap-5'>
        <div class='flex items-end gap-1 border-b border-slate-200'>
            <OrganismNavigation currentOrganism={selectedOrganism} knownOrganisms={knownOrganisms} client:load />
            {
                topNavigationItems.map(({ text, path, id }) => {
                    const itemIsActive =
                        activeTopNavigationItem !== undefined
                            ? id === activeTopNavigationItem || (id === undefined && activeTopNavigationItem === path)
                            : false;

                    return (
                        <NavigationTab
                            as='a'
                            href={path}
                            isActive={itemIsActive}
                            aria-current={itemIsActive ? 'page' : undefined}
                        >
                            {text}
                        </NavigationTab>
                    );
                })
            }
        </div>
        <AccessionSearchBox className='' client:load />
    </div>

    <div class='lg:hidden flex items-center pb-3'>
        <SandwichMenu
            topNavigationItems={topNavigationItems}
            currentOrganism={selectedOrganism}
            knownOrganisms={knownOrganisms}
            gitHubMainUrl={gitHubMainUrl}
            siteName={siteName}
            activeTopNavigationItem={activeTopNavigationItem}
            client:load
        />
    </div>
</div>
