---
import { SandwichMenu } from './SandwichMenu.tsx';
import { cleanOrganism } from './cleanOrganism';
import { navigationItems } from '../../routes/navigationItems';
import { getAuthUrl } from '../../utils/getAuthUrl';

interface Props {
    implicitOrganism?: string;
}

const { implicitOrganism } = Astro.props;
const { organism, knownOrganisms } = cleanOrganism(Astro.params.organism);
const selectedOrganism =
    implicitOrganism !== undefined ? knownOrganisms.find((it) => it.key === implicitOrganism) : organism;

const isLoggedIn = Astro.locals.session?.isLoggedIn ?? false;

const loginUrl = await getAuthUrl(Astro.url.toString());
---

<div class='flex justify-end'>
    <div class='subtitle hidden sm:flex sm:z-6 gap-4'>
        {
            navigationItems
                .top(selectedOrganism?.key, isLoggedIn, loginUrl)
                .map(({ text, path }) => <a href={path}>{text}</a>)
        }
    </div>

    <div class='sm:hidden fixed z-0'>
        <SandwichMenu
            top={16}
            right={28}
            organism={selectedOrganism}
            isLoggedIn={isLoggedIn}
            loginUrl={loginUrl}
            client:load
        />
    </div>
</div>
