---
import { cleanOrganism } from './cleanOrganism';
import { type Organism } from '../../config';
import { routes } from '../../routes';
import IwwaArrowDown from '~icons/iwwa/arrow-down';

const { knownOrganisms, organism: originalOrganism } = cleanOrganism(Astro.params.organism);
const { implicitOrganism } = Astro.props;
const foundimplicitOrganism = knownOrganisms.find((knownOrganism: Organism) => knownOrganism.key === implicitOrganism);
const organism = foundimplicitOrganism || originalOrganism;

const label = organism === undefined ? 'Organisms' : organism.displayName;
const firstBitOfUrl = Astro.url.pathname.split('/')[1];
const isOrganismPage = knownOrganisms.some((knownOrganism: Organism) => knownOrganism.key === firstBitOfUrl);
const isOrganismSelectorPage = firstBitOfUrl === 'organism-selector';
const restOfUrl = Astro.url.pathname.split('/').slice(2).join('/');
---

<div class='dropdown dropdown-hover flex relative'>
    <label tabindex='0' class='py-1 block text-gray-900 cursor-pointer'>
        {label}
        <span class='text-primary'> <IwwaArrowDown className='inline-block -mt-1 ml-1 h-4 w-4 ' /></span>
    </label>
    <ul tabindex='0' class='dropdown-content z-[1] menu p-1 shadow bg-base-100 rounded-btn absolute top-full -left-4'>
        {
            knownOrganisms.map((knownOrganism: Organism) => (
                <li>
                    <a
                        href={
                            isOrganismPage || isOrganismSelectorPage
                                ? `/${knownOrganism.key}/${restOfUrl}`
                                : routes.organismStartPage(knownOrganism.key)
                        }
                    >
                        {knownOrganism.displayName}
                    </a>
                </li>
            ))
        }
    </ul>
</div>
