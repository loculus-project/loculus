---
import DataTable from './DataTable.astro';
import { SequencesContainer } from './SequencesContainer';
import { type TableDataEntry } from './getTableData';
import { getReferenceGenomes, getRuntimeConfig } from '../../config';
import { routes } from '../../routes.ts';
import { type DataUseTermsHistoryEntry } from '../../types/backend';

interface Props {
    tableData: TableDataEntry[];
    organism: string;
    accessionVersion: string;
    dataUseTermsHistory: DataUseTermsHistoryEntry[];
}

const { tableData, organism, accessionVersion, dataUseTermsHistory } = Astro.props;

const runtimeConfig = getRuntimeConfig();

const referenceGenomes = getReferenceGenomes(organism);

const genes = referenceGenomes.genes.map((g) => g.name);
const nucleotideSegmentNames = referenceGenomes.nucleotideSequences.map((s) => s.name) as [string, ...string[]];
---

<DataTable tableData={tableData} dataUseTermsHistory={dataUseTermsHistory} />
<div>
    <a
        class='mt-4 inline-block text-blue-600 hover:text-blue-800'
        href={routes.sequencesFastaPage(organism, accessionVersion) + '?download'}
    >
        Download FASTA
    </a>
</div>
<div class='mt-10'>
    <SequencesContainer
        client:load
        organism={organism}
        accessionVersion={accessionVersion}
        clientConfig={runtimeConfig.public}
        genes={genes}
        nucleotideSegmentNames={nucleotideSegmentNames}
    />
</div>
