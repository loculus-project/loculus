---
import { SequencesContainer } from './SequencesContainer';
import { type TableDataEntry } from './getTableData';
import { getReferenceGenomes, getRuntimeConfig } from '../../config';

interface Props {
    tableData: TableDataEntry[];
    organism: string;
    accessionVersion: string;
}

const { tableData, organism, accessionVersion } = Astro.props;

const runtimeConfig = getRuntimeConfig();

const referenceGenomes = getReferenceGenomes(organism);

const genes = referenceGenomes.genes.map((g) => g.name);
const nucleotideSegmentNames = referenceGenomes.nucleotideSequences.map((s) => s.name) as [string, ...string[]];
---

<div class='mt-6'>
    <table class='table-auto'>
        <tbody>
            {
                tableData.map(({ label, value }) => (
                    <tr>
                        <td class='font-semibold pr-4 align-top w-1/4'>{label}:</td>
                        <td class='break-normal'>{value}</td>
                    </tr>
                ))
            }
        </tbody>
    </table>
</div>
<div class='mt-10'>
    <SequencesContainer
        client:load
        organism={organism}
        accessionVersion={accessionVersion}
        clientConfig={runtimeConfig.public}
        genes={genes}
        nucleotideSegmentNames={nucleotideSegmentNames}
    />
</div>
