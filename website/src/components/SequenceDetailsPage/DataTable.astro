---
import { DataUseTermsHistoryModal } from './DataUseTermsHistoryModal';
import { toHeaderMap, type TableDataEntry } from './getTableData';

import { NucSubBadge, AaSubBadge } from './MutationBadge';
import { type DataUseTermsHistoryEntry } from '../../types/backend';

interface Props {
    tableData: TableDataEntry[];
    dataUseTermsHistory: DataUseTermsHistoryEntry[];
}

const { tableData, dataUseTermsHistory } = Astro.props;
const headerMap = toHeaderMap(tableData);
---

<div>
    <NucSubBadge sub={{ ref: 'A', pos: 23, qry: 'C' }} />
    ,
    <NucSubBadge sub={{ ref: 'G', pos: 4567, qry: 'T' }} />
    ,
    <NucSubBadge sub={{ ref: 'T', pos: 4567, qry: 'A' }} />
    ,
    <NucSubBadge sub={{ ref: 'G', pos: 4567, qry: 'A' }} />
    ,
    <NucSubBadge sub={{ ref: 'A', pos: 4567, qry: '-' }} />
    ,
    <NucSubBadge sub={{ ref: 'A', pos: 4567, qry: 'N' }} />
    ,
    <NucSubBadge sub={{ ref: 'A', pos: 4567, qry: 'W' }} />
</div>

<div>
    <AaSubBadge sub={{ gene: 'ORF1a', ref: 'E', pos: 3641, qry: 'K' }} />
    ,
    <AaSubBadge sub={{ gene: 'S', ref: 'D', pos: 456, qry: 'Y' }} />
    ,
    <AaSubBadge sub={{ gene: 'S', ref: 'M', pos: 789, qry: '-' }} />
    ,
    <AaSubBadge sub={{ gene: 'S', ref: 'M', pos: 789, qry: '*' }} />
</div>

<div class='mt-2'>
    <div>
        {
            Object.entries(headerMap).map(([header, names]) => (
                <div class='pb-8'>
                    {header !== '' && <h1 class='py-2 font-medium text-primary-600'>{header}</h1>}
                    <table class='min-w-full'>
                        <tbody class='bg-white'>
                            {names.map(({ label, value, customDisplay }) => (
                                <tr>
                                    <td class='py-1 whitespace-nowrap text-sm font-medium text-gray-900 text-right w-32'>
                                        {label}
                                    </td>
                                    <td class='px-4 py-1 whitespace-normal text-sm text-gray-600'>
                                        <div class='flex items-center gap-3'>
                                            {customDisplay === undefined && value}
                                            {customDisplay !== undefined &&
                                                customDisplay.type === 'link' &&
                                                customDisplay.url !== undefined && (
                                                    <a
                                                        href={customDisplay.url.replaceAll(
                                                            '{{value}}',
                                                            value.toString(),
                                                        )}
                                                        target='_blank'
                                                        class='underline'
                                                    >
                                                        {value}
                                                    </a>
                                                )}
                                            {customDisplay !== undefined && customDisplay.type === 'dataUseTerms' && (
                                                <>
                                                    {value}{' '}
                                                    <DataUseTermsHistoryModal
                                                        dataUseTermsHistory={dataUseTermsHistory}
                                                        client:only='react'
                                                    />
                                                </>
                                            )}
                                        </div>
                                    </td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
            ))
        }
    </div>
