---
import DataTable from './DataTable.tsx';
import { getDataTableData } from './getDataTableData';
import { type TableDataEntry } from './types';
import {
    ACCESSION_VERSION_FIELD,
    SUBMITTED_AT_FIELD,
    RELEASED_AT_FIELD,
    IS_REVOCATION_FIELD,
    ACCESSION_FIELD,
    VERSION_STATUS_FIELD,
    SUBMITTER_FIELD,
    GROUP_NAME_FIELD,
    VERSION_FIELD,
    GROUP_ID_FIELD,
    DATA_USE_TERMS_FIELD,
} from '../../settings';
import { type DataUseTermsHistoryEntry } from '../../types/backend';
import type { ReferenceGenomesSequenceNames } from '../../types/referencesGenomes';

interface Props {
    tableData: TableDataEntry[];
    dataUseTermsHistory: DataUseTermsHistoryEntry[];
    referenceGenomeSequenceNames: ReferenceGenomesSequenceNames;
}

const { tableData, dataUseTermsHistory, referenceGenomeSequenceNames } = Astro.props;

const relevantFieldsForRevocationVersions = [
    ACCESSION_VERSION_FIELD,
    ACCESSION_FIELD,
    IS_REVOCATION_FIELD,
    RELEASED_AT_FIELD,
    VERSION_STATUS_FIELD,
    SUBMITTED_AT_FIELD,
    SUBMITTER_FIELD,
    VERSION_FIELD,
    GROUP_NAME_FIELD,
    GROUP_ID_FIELD,
    DATA_USE_TERMS_FIELD,
];

const relevantData = tableData.filter((entry) => relevantFieldsForRevocationVersions.includes(entry.name));
const dataTableData = getDataTableData(relevantData);

const reference = referenceGenomeSequenceNames.insdc_accession_full;
---

<DataTable dataTableData={dataTableData} dataUseTermsHistory={dataUseTermsHistory} reference={reference} />
