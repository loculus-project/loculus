---
import { SequenceStatusBox } from './SequenceStatusBox';
import { SequenceTable } from './SequenceTable';
import { getRuntimeConfig } from '../../config';
import { type SequenceStatus } from '../../types';

interface Props {
    sequences: SequenceStatus[];
    username: string;
}

const { sequences, username } = Astro.props;
const clientConfig = getRuntimeConfig().forClient;

const statusArray = sequences.reduce(
    (acc, item) => {
        acc[item.status].push(item);
        return acc;
    },
    {
        RECEIVED: [] as SequenceStatus[],
        PROCESSING: [] as SequenceStatus[],
        NEEDS_REVIEW: [] as SequenceStatus[],
        REVIEWED: [] as SequenceStatus[],
        PROCESSED: [] as SequenceStatus[],
        SILO_READY: [] as SequenceStatus[],
        REVOKED_STAGING: [] as SequenceStatus[],
    },
);

const keyPrefix = `userSequences.${username}`;
---

<div class='flex flex-col gap-2 mt-5'>
    <SequenceStatusBox
        count={statusArray.RECEIVED.length}
        description='received'
        localStorageKey={`${keyPrefix}.receivedExpanded`}
        client:only='react'
    >
        <SequenceTable
            username={username}
            sequences={statusArray.RECEIVED}
            bulkActionNames={['delete']}
            singleActionNames={[]}
            clientConfig={clientConfig}
            client:load
        />
    </SequenceStatusBox>

    <SequenceStatusBox
        count={statusArray.PROCESSING.length}
        description='in processing'
        localStorageKey={`${keyPrefix}.processingExpanded`}
        client:only='react'
    >
        <SequenceTable
            username={username}
            sequences={statusArray.PROCESSING}
            bulkActionNames={[]}
            singleActionNames={[]}
            clientConfig={clientConfig}
            client:load
        />
    </SequenceStatusBox>

    <SequenceStatusBox
        count={statusArray.NEEDS_REVIEW.length}
        description={`need${statusArray.NEEDS_REVIEW.length === 1 ? 's' : ''} review`}
        localStorageKey={`${keyPrefix}.needsReviewExpanded`}
        client:only='react'
    >
        <SequenceTable
            username={username}
            sequences={statusArray.NEEDS_REVIEW}
            bulkActionNames={['delete']}
            singleActionNames={['review']}
            clientConfig={clientConfig}
            client:load
        />
    </SequenceStatusBox>

    <SequenceStatusBox
        count={statusArray.REVIEWED.length}
        description='reviewed'
        localStorageKey={`${keyPrefix}.reviewedExpanded`}
        client:only='react'
    >
        <SequenceTable
            username={username}
            sequences={statusArray.REVIEWED}
            bulkActionNames={['delete']}
            singleActionNames={[]}
            clientConfig={clientConfig}
            client:load
        />
    </SequenceStatusBox>

    <SequenceStatusBox
        count={statusArray.PROCESSED.length}
        description='processed'
        localStorageKey={`${keyPrefix}.stagingExpanded`}
        client:only='react'
    >
        <SequenceTable
            username={username}
            sequences={statusArray.PROCESSED}
            bulkActionNames={['approve', 'delete']}
            singleActionNames={['review']}
            clientConfig={clientConfig}
            client:load
        />
    </SequenceStatusBox>

    <SequenceStatusBox
        count={statusArray.SILO_READY.length}
        description='ready for SILO import'
        localStorageKey={`${keyPrefix}.readyExpanded`}
        client:only='react'
    >
        <SequenceTable
            username={username}
            sequences={statusArray.SILO_READY}
            bulkActionNames={['revoke']}
            singleActionNames={[]}
            clientConfig={clientConfig}
            client:load
        />
    </SequenceStatusBox>

    <SequenceStatusBox
        count={statusArray.REVOKED_STAGING.length}
        description='staged for revocation'
        localStorageKey={`${keyPrefix}.revokedExpanded`}
        client:only='react'
    >
        <SequenceTable
            username={username}
            sequences={statusArray.REVOKED_STAGING}
            bulkActionNames={['confirmRevocation', 'delete']}
            singleActionNames={[]}
            clientConfig={clientConfig}
            client:load
        />
    </SequenceStatusBox>
</div>
