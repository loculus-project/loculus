---
import { GroupManager } from './GroupManager';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { ErrorFeedback } from '../../components/ErrorFeedback';
import { BackButton } from '../Navigation/BackButton';
import { AvatarBadge } from './AvatarBadge';
import { CitationPlot } from '../../components/Datasets/CitationPlot';
import { getKeycloakClient } from '../../middleware/authMiddleware';
import { routes } from '../../routes';
import { BackendClient } from '../../services/backendClient';
import { getAccessToken } from '../../utils/getAccessToken';
import { mockUserAggCitations } from '../../components/Datasets/mockData';

const session = Astro.locals.session;
const organism: string | undefined = Astro.params.organism;

const logoutUrl = new URL(Astro.request.url);
logoutUrl.pathname = routes.logout();

const keycloakLogoutUrl = (await getKeycloakClient()).endSessionUrl({
    post_logout_redirect_uri: logoutUrl.href,
});

const accessToken = getAccessToken(Astro.locals.session)!;
const username = Astro.locals.session.user!.name;

const userCitationsResponse = await BackendClient.create().astroFileTypeHelpers.getCitationsOfUser(
    accessToken,
    username,
);
---

<BaseLayout title='Login'>
    <div class='flex flex-col justify-start'></div>
        <BackButton marginRight={2} client:load />
        <div class='flex flex-row items-left'>

            <div class='w-3/4 flex flex-col justify-start'>
                <div class='self-start my-4'>
                    <AvatarBadge username={session.user?.name} client:only='react' />
                </div>
                <GroupManager initialGroups={[]} client:load />
                {
                    organism !== undefined && (
                        <div class='my-2 mx-4'>
                            <a href={routes.userSequencesPage(organism)}>Sequence Overview</a>
                        </div>
                    )
                }
                <div class='my-2 mx-4'>
                    <a href={routes.datasetsPage()}>Datasets Overview</a>
                </div>
                <div class='my-2 mx-4'>
                    <a href={keycloakLogoutUrl}>Logout</a>
                </div>
            </div>
            <div class='w-1/4 flex flex-col justify-start'>
                {
                    userCitationsResponse.match(
                        (citationData) => <CitationPlot citationData={citationData} />,
                        (error) => (
                            <div>
                            <ErrorFeedback
                                message={'Error while fetching user sequences: ' + JSON.stringify(error)}
                                client:only='react'
                            />
                            <CitationPlot citationData={mockUserAggCitations} client:only='react'/>
                            </div>
                        ),
                    )
                }
            </div>
        </div>
    </div>
</BaseLayout>
