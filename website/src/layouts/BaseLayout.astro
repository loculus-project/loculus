---
import '../styles/base.scss';
import { ToastContainer } from 'react-toastify';

import Navigation from '../components/Navigation/Navigation.astro';
import OrganismSelector from '../components/Navigation/OrganismSelector.astro';
import { Banner } from '../components/common/Banner';
import { getWebsiteConfig } from '../config';
import 'react-toastify/dist/ReactToastify.css';
import { navigationItems } from '../routes/navigationItems';
import { BackendClient } from '../services/backendClient';

const websiteConfig = getWebsiteConfig();
const { name: websiteName, logo, bannerMessage, additionalHeadHTML, gitHubMainUrl } = websiteConfig;

interface Props {
    title: string;
    implicitOrganism?: string;
    noHorizontalPadding?: boolean;
}

const { title, implicitOrganism, noHorizontalPadding } = Astro.props;

const backendIsInDebugMode = await BackendClient.create().isInDebugMode();

const lastTimeBannerWasClosed = Astro.cookies.get('lastTimeBannerWasClosed')?.value;
---

<html lang='en'>
    <head>
        <meta charset='utf-8' />
        <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
        <link rel='preload' as='image' href='/favicon.svg' />
        <meta name='viewport' content='width=device-width' />
        <meta name='generator' content={Astro.generator} />
        <meta property='og:url' content={Astro.url} />
        <meta property='og:title' content={websiteName + ' | ' + title} />
        <meta property='twitter:url' content={Astro.url} />
        <meta property='twitter:title' content={websiteName + ' | ' + title} />
        <title>{title} | {websiteName}</title>
        <Fragment set:html={additionalHeadHTML} />
    </head>
    <body>
        {backendIsInDebugMode && <div class='bg-red-500 text-white text-center p-2'>Backend is in debug mode</div>}
        <Banner
            message={bannerMessage}
            lastTimeBannerWasClosed={lastTimeBannerWasClosed !== undefined
                ? parseInt(lastTimeBannerWasClosed, 10)
                : undefined}
            serverTime={Date.now()}
            client:load
        />
        <div class='flex flex-col min-h-screen w-11/12 mx-auto'>
            <ToastContainer client:load />
            <header class='bg-white h-fit z-30'>
                <nav class='flex justify-between items-center p-4'>
                    <div class='flex justify-start'>
                        <div class='flex flex-col'>
                            <div class='flex flex-row pb-3'>
                                <a href='/'
                                    ><img
                                        class='h-8 mr-4'
                                        src={logo.url}
                                        alt='icon'
                                        style={{
                                            aspectRatio: `${logo.width}/${logo.height}`,
                                        }}
                                    /></a
                                >
                                <a href='/' class='fancytitle mr-4'>{websiteName}</a>
                            </div>
                            <OrganismSelector implicitOrganism={implicitOrganism} />
                        </div>
                    </div>
                    <Navigation implicitOrganism={implicitOrganism} gitHubMainUrl={gitHubMainUrl} />
                </nav>
                <hr class='border-t border-gray-1000' />

                <slot name='banner' />
            </header>

            <div class:list={['flex-grow', 'mt-3', 'mb-5', noHorizontalPadding === true ? '' : 'px-4']}>
                <slot />
            </div>

            <hr class='border-t border-gray-1000' />
            <footer class='hidden sm:flex sm:z-6 sm:z-6 flex justify-between items-center h-20'>
                <div class='flex gap-5'>
                    {
                        navigationItems.bottom.map(({ text, path }) => (
                            <a href={path} class='text-gray-600'>
                                {text}
                            </a>
                        ))
                    }
                </div>

                <a
                    href={gitHubMainUrl !== undefined ? gitHubMainUrl : 'https://github.com/loculus-project'}
                    class='h-full py-6'
                >
                    <img src='/github-mark.svg' class='h-full object-scale-down' alt='github-icon' />
                </a>
            </footer>
        </div>
    </body>
</html>
