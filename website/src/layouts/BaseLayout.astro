---
import '../styles/base.scss';
import 'react-toastify/dist/ReactToastify.css';
import { ToastContainer } from 'react-toastify';

import Navigation from '../components/Navigation/Navigation.astro';
import OrganismSubmenu from '../components/Navigation/OrganismSubmenu.astro';
import { cleanOrganism } from '../components/Navigation/cleanOrganism';
import { Banner } from '../components/common/Banner';
import { getWebsiteConfig } from '../config';
import { navigationItems } from '../routes/navigationItems';
import { createBackendClient } from '../services/backendClientFactory';
import { getRemoteBannerMessage } from '../services/bannerMessageService';

const websiteConfig = getWebsiteConfig();
const {
    name: websiteName,
    logo,
    bannerMessage: configBannerMessage,
    additionalHeadHTML,
    gitHubMainUrl,
} = websiteConfig;
const remoteBannerMessage = await getRemoteBannerMessage();
const bannerMessage = remoteBannerMessage ?? configBannerMessage;

interface Props {
    title: string;
    implicitOrganism?: string;
    fullWidth?: boolean;
}

const { title, implicitOrganism, fullWidth } = Astro.props;

const { organism, knownOrganisms } = cleanOrganism(Astro.params.organism);
const implicitOrganismObject = implicitOrganism ? knownOrganisms.find((o) => o.key === implicitOrganism) : undefined;
const currentOrganismObject = implicitOrganismObject || organism;
const currentOrganism = currentOrganismObject?.key;

const currentPath = Astro.url.pathname;

const backendIsInDebugMode = await createBackendClient().isInDebugMode();

const lastTimeBannerWasClosed = Astro.cookies.get('lastTimeBannerWasClosed')?.value;
---

<html lang='en'>
    <head>
        <meta charset='utf-8' />
        <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
        <link rel='preload' as='image' href='/favicon.svg' />
        <meta name='viewport' content='width=device-width' />
        <meta name='generator' content={Astro.generator} />
        <meta property='og:url' content={Astro.url} />
        <meta property='og:title' content={websiteName + ' | ' + title} />
        <meta property='twitter:url' content={Astro.url} />
        <meta property='twitter:title' content={websiteName + ' | ' + title} />
        <title>{title} | {websiteName}</title>
        <Fragment set:html={additionalHeadHTML} />
    </head>
    <body>
        {backendIsInDebugMode && <div class='bg-red-500 text-white text-center p-2'>Backend is in debug mode</div>}
        <Banner
            message={bannerMessage}
            lastTimeBannerWasClosed={lastTimeBannerWasClosed !== undefined
                ? parseInt(lastTimeBannerWasClosed, 10)
                : undefined}
            serverTime={Date.now()}
            client:load
        />
        <div class='flex flex-col min-h-screen'>
            <ToastContainer client:load />
            <header class={`bg-white h-fit z-30 ${!currentOrganism ? 'border-b-[1.5px] border-gray-200' : ''}`}>
                <nav class='flex justify-between items-center p-4 mx-4'>
                    <div class='flex justify-start'>
                        <div class='flex flex-col'>
                            <div class='flex flex-row'>
                                <a href='/'
                                    ><img
                                        class='h-8 mr-4'
                                        src={logo.url}
                                        alt='icon'
                                        style={{
                                            aspectRatio: `${logo.width}/${logo.height}`,
                                        }}
                                    /></a
                                >
                                <a href='/' class='fancytitle mr-4'>{websiteName}</a>
                            </div>
                        </div>
                    </div>
                    <Navigation implicitOrganism={implicitOrganism} gitHubMainUrl={gitHubMainUrl} />
                </nav>

                <OrganismSubmenu
                    currentOrganism={currentOrganism}
                    currentOrganismObject={currentOrganismObject}
                    currentPath={currentPath}
                />

                <slot name='banner' />
            </header>

            <div
                class:list={[
                    'flex-grow',
                    'mt-3',
                    'mb-5',
                    fullWidth ? 'mx-4' : 'max-w-7xl mx-auto w-full px-4',
                ]}
            >
                <slot />
            </div>

            <hr class='border-t border-gray-1000' />
            <footer
                class={`hidden sm:flex sm:z-6 justify-between items-center h-20 px-4 ${fullWidth ? 'mx-4' : 'max-w-7xl mx-auto w-full'}`}
            >
                <div class='flex gap-5'>
                    {
                        navigationItems.bottom.map(({ text, path }) => (
                            <a href={path} class='text-gray-600'>
                                {text}
                            </a>
                        ))
                    }
                </div>

                <a
                    href={gitHubMainUrl !== undefined ? gitHubMainUrl : 'https://github.com/loculus-project'}
                    class='h-full py-6'
                >
                    <img src='/github-mark.svg' class='h-full object-scale-down' alt='github-icon' />
                </a>
            </footer>
        </div>
    </body>
</html>
