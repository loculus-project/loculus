---
import { cleanOrganism } from '../../../components/Navigation/cleanOrganism';
import { SearchFullUI } from '../../../components/SearchPage/SearchFullUI';
import {
    dataUseTermsAreEnabled,
    getReferenceGenomesSequenceNames,
    getRuntimeConfig,
    getSchema,
    getWebsiteConfig,
} from '../../../config';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { VERSION_STATUS_FIELD, IS_REVOCATION_FIELD } from '../../../settings';
import { versionStatuses } from '../../../types/lapis';
import { getAccessToken } from '../../../utils/getAccessToken';
import { getMyGroups } from '../../../utils/getMyGroups';
import { performLapisSearchQueries } from '../../../utils/serversideSearch';

// These values are defaults that we already set
const hiddenFieldValues = {
    [VERSION_STATUS_FIELD]: versionStatuses.latestVersion,
    [IS_REVOCATION_FIELD]: 'false',
};

const { organism: cleanedOrganism } = cleanOrganism(Astro.params.organism);

if (!cleanedOrganism) {
    return {
        statusCode: 404,
        body: 'Organism not found',
    };
}

const clientConfig = getRuntimeConfig().public;
const schema = getSchema(cleanedOrganism.key);

const accessToken = getAccessToken(Astro.locals.session);
const myGroups = accessToken !== undefined ? await getMyGroups(accessToken) : [];

const referenceGenomeSequenceNames = getReferenceGenomesSequenceNames(cleanedOrganism.key);

const initialQueryDict = Object.fromEntries(Astro.url.searchParams.entries());
const { data, totalCount } = await performLapisSearchQueries(
    initialQueryDict,
    schema,
    referenceGenomeSequenceNames,
    hiddenFieldValues,
    cleanedOrganism.key,
);

const sequenceFlaggingConfig = getWebsiteConfig().sequenceFlagging;
---

<BaseLayout title={`${cleanedOrganism.displayName} - Browse`} noHorizontalPadding>
    <h1 class='title px-3 py-2 ml-1'>Search</h1>

    <SearchFullUI
        client:load
        clientConfig={clientConfig}
        organism={cleanedOrganism.key}
        schema={schema}
        myGroups={myGroups}
        accessToken={accessToken}
        referenceGenomesSequenceNames={referenceGenomeSequenceNames}
        hiddenFieldValues={hiddenFieldValues}
        initialData={data}
        initialCount={totalCount}
        initialQueryDict={initialQueryDict}
        dataUseTermsEnabled={dataUseTermsAreEnabled()}
        sequenceFlaggingConfig={sequenceFlaggingConfig}
    />
</BaseLayout>
