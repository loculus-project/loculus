---
import { cleanOrganism } from '../../../components/Navigation/cleanOrganism';
import { SearchFullUI } from '../../../components/SearchPage/SearchFullUI';
import { getRuntimeConfig, getSchema } from '../../../config';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { VERSION_STATUS_FIELD, IS_REVOCATION_FIELD } from '../../../settings';
import { siloVersionStatuses } from '../../../types/lapis';
import { getAccessToken } from '../../../utils/getAccessToken';
import { getMyGroups } from '../../../utils/getMyGroups';
import { getReferenceGenomesSequenceNames } from '../../../utils/search';
const hiddenFieldValues = {
    [VERSION_STATUS_FIELD]: siloVersionStatuses.latestVersion,
    [IS_REVOCATION_FIELD]: 'false',
};

const { organism: cleanedOrganism } = cleanOrganism(Astro.params.organism);

if (!cleanedOrganism) {
    return {
        statusCode: 404,
        body: 'Organism not found',
    };
}

const clientConfig = getRuntimeConfig().public;
const schema = getSchema(cleanedOrganism.key);

const accessToken = getAccessToken(Astro.locals.session);
const myGroups = accessToken !== undefined ? await getMyGroups(accessToken) : [];

const referenceGenomeSequenceNames = getReferenceGenomesSequenceNames(cleanedOrganism.key);
---

<BaseLayout title={`${cleanedOrganism.displayName} - Browse`} noHorizontalPadding>
    <h1 class='title px-3 py-2 ml-1'>Search</h1>

    <SearchFullUI
        client:load
        clientConfig={clientConfig}
        organism={cleanedOrganism.key}
        schema={schema}
        myGroups={myGroups}
        accessToken={accessToken}
        referenceGenomesSequenceNames={referenceGenomeSequenceNames}
        hiddenFieldValues={hiddenFieldValues}
    />
</BaseLayout>
