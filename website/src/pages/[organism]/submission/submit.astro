---
import { SubmissionForm } from '../../../components/Submission/SubmissionForm';
import NeedToLogin from '../../../components/common/NeedToLogin.astro';
import { getRuntimeConfig } from '../../../config';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { GroupManagementClient } from '../../../services/groupManagementClient';
import { getAccessToken } from '../../../utils/getAccessToken';
const organism = Astro.params.organism!;
const accessToken = getAccessToken(Astro.locals.session)!;

const groupsResult = await GroupManagementClient.create().getGroupsOfUser(accessToken);

const clientConfig = getRuntimeConfig().public;

// Prevent caching to allow back button after user creates group
Astro.response.headers.append('Cache-Control', 'no-cache, no-store, must-revalidate');
Astro.response.headers.append('Pragma', 'no-cache');
Astro.response.headers.append('Expires', '0');
---

<BaseLayout title='Submit'>
    <h1 class='title'>Submit sequences</h1>
    {
        !accessToken ? (
            <NeedToLogin message='You need to be logged in to submit sequences.' />
        ) : groupsResult.isOk() ? (
            <SubmissionForm
                accessToken={accessToken}
                organism={organism}
                clientConfig={clientConfig}
                groupsOfUser={groupsResult.value}
                client:load
            />
        ) : (
            <p class='text-red-500'>Failed to load groups</p>
        )
    }
</BaseLayout>
