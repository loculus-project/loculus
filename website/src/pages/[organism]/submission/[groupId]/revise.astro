---
import { cleanOrganism } from '../../../../components/Navigation/cleanOrganism';
import { RevisionForm } from '../../../../components/Submission/RevisionForm';
import SubmissionPageWrapper from '../../../../components/Submission/SubmissionPageWrapper.astro';
import { getGroupedInputFields, getRuntimeConfig, getSchema } from '../../../../config';
import { getAccessToken } from '../../../../utils/getAccessToken';
import { getReferenceGenomesSequenceNames } from '../../../../utils/search';
import { getGroupsAndCurrentGroup } from '../../../../utils/submissionPages';

const organism = Astro.params.organism!;
const { organism: cleanedOrganism } = cleanOrganism(Astro.params.organism);

if (!cleanedOrganism) {
    return {
        statusCode: 404,
        body: 'Organism not found',
    };
}
const referenceGenomeSequenceNames = getReferenceGenomesSequenceNames(cleanedOrganism.key);
const schema = getSchema(cleanedOrganism.key);
const groupedInputFields = getGroupedInputFields(cleanedOrganism.key, 'revise', true);

const groupsResult = await getGroupsAndCurrentGroup(Astro.params, Astro.locals.session);

const clientConfig = getRuntimeConfig().public;
---

<SubmissionPageWrapper title='Revise sequences' groupsResult={groupsResult}>
    {
        groupsResult.match(
            ({ currentGroup: group }) => (
                <RevisionForm
                    accessToken={getAccessToken(Astro.locals.session)!}
                    organism={organism}
                    referenceGenomeSequenceNames={referenceGenomeSequenceNames}
                    metadataTemplateFields={groupedInputFields}
                    clientConfig={clientConfig}
                    group={group}
                    submissionDataTypes={schema.submissionDataTypes}
                    client:load
                />
            ),
            () => undefined,
        )
    }
</SubmissionPageWrapper>
