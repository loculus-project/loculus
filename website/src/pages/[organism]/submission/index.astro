---
import { cleanOrganism } from '../../../components/Navigation/cleanOrganism';
import { NeedAGroup } from '../../../components/common/NeedAGroup.tsx';
import NeedToLogin from '../../../components/common/NeedToLogin.astro';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { routes } from '../../../routes/routes';
import { getGroups } from '../../../utils/submissionPages';

const { organism } = cleanOrganism(Astro.params.organism);
const groupsResult = await getGroups(Astro.locals.session);

if (groupsResult.isOk()) {
    const groups = groupsResult.value;
    if (groups.length > 0) {
        return Astro.redirect(routes.submissionPage(organism!.key, groups[0].groupId));
    }
}

// Prevent caching to allow back button after user creates group
Astro.response.headers.append('Cache-Control', 'no-cache, no-store, must-revalidate');
Astro.response.headers.append('Pragma', 'no-cache');
Astro.response.headers.append('Expires', '0');
---

<BaseLayout title='Submission portal'>
    <h1 class='title'>Submission portal</h1>
    {
        groupsResult.match(
            () => <NeedAGroup />,
            () => <NeedToLogin message='You need to be logged in to access the submission portal.' />,
        )
    }
</BaseLayout>
