---
import { ErrorFeedback } from '../../components/ErrorFeedback';
import { DatasetItem } from '../../components/Datasets/DatasetItem';
import { DatasetItemActions } from '../../components/Datasets/DatasetItemActions';
import { BackButton } from '../../components/Navigation/BackButton';
import { AuthorDetails } from '../../components/Datasets/AuthorDetails';
import { getRuntimeConfig } from '../../config';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { BackendClient } from '../../services/backendClient';
import { getAccessToken } from '../../utils/getAccessToken';

const clientConfig = getRuntimeConfig().public;
const accessToken = getAccessToken(Astro.locals.session)!;
const { datasetId = '', version = '1' } = Astro.params;

const username = Astro.locals.session.user?.username;

const datasetResponse = await BackendClient.create().astroFileTypeHelpers.getDataset(
    accessToken,
    datasetId,
    version,
);

const datasetRecordsResponse = await BackendClient.create().astroFileTypeHelpers.getDatasetRecords(
    accessToken,
    datasetId,
    version,
);

---

<BaseLayout title='Datasets' data-testid='datasets-item-container'>
    <BackButton marginRight={0} client:load />
    <div class='flex flex-col justify-start'>
        {
            datasetResponse.match(
                (dataset) => (
                    <div class='flex flex-row items-left'>
                        <div class='w-1/6 flex flex-col justify-start items-center'>
                            <AuthorDetails 
                                displayFullDetails={false}
                                name={dataset[0]?.createdBy}
                                fontSize={60}
                            />
                        </div>
                        <div class='w-5/6 pl-6'>
                            {
                                dataset !== undefined && dataset.length > 0 ? (
                                    datasetRecordsResponse.match(
                                        (datasetRecords) => (
                                            <DatasetItemActions
                                                dataset={dataset[0]}
                                                datasetRecords={datasetRecords}
                                                clientConfig={clientConfig}
                                                accessToken={accessToken}
                                                isAdminView={dataset[0]?.createdBy === username}
                                                client:load
                                            />
                                            <DatasetItem
                                                dataset={dataset[0]}
                                                datasetRecords={datasetRecords}
                                                client:load
                                            />
                                        ),
                                        (error) => (
                                            <ErrorFeedback
                                                message={'Error while fetching dataset records: ' + JSON.stringify(error)}
                                                client:only='react'
                                            />
                                        )
                                    )
                                ) : null
                            }
                        </div>
                    </div>
                ),
                (error) => (
                    <ErrorFeedback
                        message={'Error while fetching dataset: ' + JSON.stringify(error)}
                        client:only='react'
                    />
                )
            )
        }
    </div>
</BaseLayout>
