---
import { getDataset, getDatasetRecords, getDatasetCitedBy, getDatasetByVersion } from './datasets';
import { AuthorDetails } from '../../components/DatasetCitations/AuthorDetails';
import { DatasetItem } from '../../components/DatasetCitations/DatasetItem';
import { DatasetItemActions } from '../../components/DatasetCitations/DatasetItemActions';
import { ErrorFeedback } from '../../components/ErrorFeedback';
import { BackButton } from '../../components/Navigation/BackButton';
import { getRuntimeConfig } from '../../config';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getAccessToken } from '../../utils/getAccessToken';

const clientConfig = getRuntimeConfig().public;
const accessToken = getAccessToken(Astro.locals.session)!;
const { datasetId = '' } = Astro.params;
const version = Astro.url.searchParams.get('version')! || '1';
const username = Astro.locals.session.user?.username;

const datasetResponse = (await getDataset(accessToken, datasetId, version)) as any;

const datasetRecordsResponse = (await getDatasetRecords(accessToken, datasetId, version)) as any;

const datasetCitedByResponse = (await getDatasetCitedBy(accessToken, datasetId, version)) as any;

const dataset = datasetResponse.value !== undefined ? getDatasetByVersion(datasetResponse.value, version) : undefined;
---

<BaseLayout title='Datasets' data-testid='datasets-item-container'>
    <BackButton marginRight={0} client:load />
    <div class='flex flex-col justify-start'>
        {
            dataset !== undefined ? (
                <div class='flex flex-row items-left'>
                    <div class='w-1/6 flex flex-col justify-start items-center'>
                        <AuthorDetails displayFullDetails={false} name={dataset.createdBy} fontSize={60} />
                    </div>
                    <div class='w-5/6 pl-6'>
                        {datasetRecordsResponse.value !== undefined ? (
                            <DatasetItemActions
                                clientConfig={clientConfig}
                                accessToken={accessToken}
                                dataset={dataset}
                                datasetRecords={datasetRecordsResponse.value}
                                isAdminView={dataset.createdBy === username}
                                client:only='react'
                            />
                        ) : (
                            <ErrorFeedback
                                message={
                                    'Error while fetching dataset records: ' +
                                    JSON.stringify(datasetRecordsResponse.error)
                                }
                                client:only='react'
                            />
                        )}
                        {datasetRecordsResponse.value !== undefined && datasetCitedByResponse.value !== undefined ? (
                            <DatasetItem
                                clientConfig={clientConfig}
                                accessToken={accessToken}
                                dataset={dataset}
                                datasetRecords={datasetRecordsResponse.value}
                                citedByData={datasetCitedByResponse.value}
                                client:load
                            />
                        ) : (
                            <ErrorFeedback
                                message={
                                    'Error while fetching dataset citations: ' +
                                    JSON.stringify(datasetCitedByResponse.error)
                                }
                                client:only='react'
                            />
                        )}
                    </div>
                </div>
            ) : (
                <ErrorFeedback
                    message={'Error while fetching dataset: ' + JSON.stringify(datasetResponse.error)}
                    client:only='react'
                />
            )
        }
    </div>
</BaseLayout>
