---
import { AuthorDetails } from '../../components/DatasetCitations/AuthorDetails';
import { CitationPlot } from '../../components/DatasetCitations/CitationPlot';
import { DatasetList } from '../../components/DatasetCitations/DatasetList';
import { DatasetListActions } from '../../components/DatasetCitations/DatasetListActions';
import { ErrorFeedback } from '../../components/ErrorFeedback';
import { getRuntimeConfig } from '../../config';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { DatasetCitationClient } from '../../services/datasetCitationClient.ts';
import { createAuthorizationHeader } from '../../utils/createAuthorizationHeader.ts';
import { getAccessToken } from '../../utils/getAccessToken';

const clientConfig = getRuntimeConfig().public;
const accessToken = getAccessToken(Astro.locals.session)!;
const username = Astro.locals.session.user!.username!;
const session = Astro.locals.session;

const datasetClient = DatasetCitationClient.create();

const datasetsResponse = (await datasetClient.call('getDatasetsOfUser', {
    headers: createAuthorizationHeader(accessToken),
})) as any;

const userCitedByResponse = (await datasetClient.call('getUserCitedBy', {
    params: { username },
    headers: createAuthorizationHeader(accessToken),
})) as any;

const authorResponse = (await datasetClient.call('getAuthor', {
    headers: createAuthorizationHeader(accessToken),
})) as any;

const handlePrivateAuthorProfile = (authorResponse: any, userSession: any) => {
    const authorData = authorResponse ?? {};
    return {
        name: userSession?.name,
        email: userSession?.email,
        emailVerified: userSession?.email_verified,
        ...authorData,
    };
};

const authorData = handlePrivateAuthorProfile(authorResponse.value, session.user);
---

<BaseLayout title='Datasets' data-testid='datasets-list-container'>
    <div class='flex flex-col justify-center items-center'>
        <div class='flex flex-row justify-center w-5/6 divide-x'>
            <div class='w-3/4 flex flex-col justify-start'>
                <AuthorDetails
                    displayFullDetails
                    clientConfig={clientConfig}
                    accessToken={accessToken}
                    fontSize={120}
                    client:load
                    {...authorData}
                />
                <hr />
                <div class='flex justify-start'>
                    <div>
                        <div class='flex justify-start items-center py-5'>
                            <h1 class='text-2xl font-semibold'>Datasets</h1>
                            <DatasetListActions clientConfig={clientConfig} accessToken={accessToken} client:load />
                        </div>
                        <div>
                            {
                                datasetsResponse.value !== undefined ? (
                                    <DatasetList datasets={datasetsResponse.value} username={username} client:load />
                                ) : (
                                    <ErrorFeedback
                                        message={
                                            'Error while fetching datasets: ' + JSON.stringify(datasetsResponse.error)
                                        }
                                        client:load
                                    />
                                )
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class='w-1/4 flex flex-col justify-start items-start pl-4'>
                <span class='text-xl'>Cited By</span>
                {
                    userCitedByResponse.value !== undefined ? (
                        <CitationPlot citedByData={userCitedByResponse.value} client:load />
                    ) : (
                        <ErrorFeedback
                            message={'Error while fetching datasets: ' + JSON.stringify(userCitedByResponse.error)}
                            client:load
                        />
                    )
                }
            </div>
        </div>
    </div>
</BaseLayout>
