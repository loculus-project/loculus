---
import { sentenceCase } from 'change-case';

import { getVersionsData } from './getVersionsData';
import ErrorBox from '../../../components/common/ErrorBox.tsx';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { routes } from '../../../routes/routes';
import {
    extractAccessionVersion,
    getAccessionVersionString,
    parseAccessionVersionFromString,
} from '../../../utils/extractAccessionVersion';
import { getVersionStatusColor } from '../../../utils/getVersionStatusColor';

const accessionVersion = Astro.params.accessionVersion!;
const { accession } = parseAccessionVersionFromString(accessionVersion);
const { organism, versionListResult } = await getVersionsData(accession);
---

<BaseLayout title={accession + ' versions'} implicitOrganism={organism}>
    <div class='flex flex-row pb-2'>
        <h1 class='title'>Versions for accession {accession}</h1>
    </div>

    <ul class='p-3'>
        {
            versionListResult.match(
                (list) => {
                    return list.map((version) => (
                        <li class='mb-4'>
                            <div class='mb-2'>
                                <div class='font-semibold'>{version.submittedAt}</div>
                                <div class='flex flex-row gap-3 justify-start'>
                                    <a
                                        href={routes.sequencesDetailsPage(
                                            getAccessionVersionString(extractAccessionVersion(version)),
                                        )}
                                        class='underline'
                                    >
                                        {getAccessionVersionString(extractAccessionVersion(version))}
                                    </a>

                                    <p class={`font-bold ${getVersionStatusColor(version.versionStatus)}`}>
                                        ({sentenceCase(version.versionStatus)})
                                    </p>
                                </div>
                            </div>
                        </li>
                    ));
                },
                (error) => {
                    return <ErrorBox title='Request for sequence history failed'>{error}</ErrorBox>;
                },
            )
        }
    </ul>
</BaseLayout>
