---
import { GroupPage } from '../../../components/User/GroupPage';
import ErrorBox from '../../../components/common/ErrorBox.astro';
import NeedToLogin from '../../../components/common/NeedToLogin.astro';
import { getRuntimeConfig } from '../../../config';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { GroupManagementClient } from '../../../services/groupManagementClient';
import { getAccessToken } from '../../../utils/getAccessToken';

const session = Astro.locals.session!;
const accessToken = getAccessToken(session)!;
const username = session.user?.username ?? '';
const groupName = Astro.params.groupName!;
const clientConfig = getRuntimeConfig().public;

const groupDetailsResult = await GroupManagementClient.create().getGroupDetails(accessToken, groupName);
---

<BaseLayout title='Group'>
    <div class='flex items-center'>
        <h1 class='title'>Group: {groupName}</h1>
    </div>
    {
        !accessToken ? (
            <NeedToLogin message='You need to be logged in to view group information.' />
        ) : (
            groupDetailsResult.match(
                (groupDetails) => (
                    <GroupPage
                        prefetchedGroupDetails={groupDetails}
                        accessToken={accessToken}
                        clientConfig={clientConfig}
                        username={username}
                        client:load
                    />
                ),
                () => <ErrorBox>Failed to fetch group details, sorry for the inconvenience!</ErrorBox>,
            )
        )
    }
</BaseLayout>
