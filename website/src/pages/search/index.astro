---
import { getData, getMetadataSettings } from './search';
import { ErrorFeedback } from '../../components/ErrorFeedback';
import { Pagination } from '../../components/SearchPage/Pagination';
import { SearchForm } from '../../components/SearchPage/SearchForm';
import { Table } from '../../components/SearchPage/Table';
import { getConfig, getRuntimeConfig } from '../../config';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { pageSize } from '../../settings';
import type { Filter } from '../../types';

const config = getConfig();
const clientConfig = getRuntimeConfig().forClient;
const getSearchParams = (field: string): string => {
    return Astro.url.searchParams.get(field) ?? '';
};

const metadataSettings: Filter[] = await getMetadataSettings(getSearchParams);

const pageParam = Astro.url.searchParams.get('page');
const page = pageParam !== null ? Number.parseInt(pageParam, 10) : 1;
const offset = (page - 1) * pageSize;

const data = await getData(metadataSettings, offset, pageSize);
---

<BaseLayout title='Search'>
    <h1 class='title'>Search</h1>
    <div class='flex flex-col md:flex-row gap-8 md:gap-4'>
        {
            data.isErr() && (
                <ErrorFeedback
                    message={'Error while fetching data: ' + data._unsafeUnwrapErr().detail}
                    client:only='react'
                />
            )
        }

        <div class='md:w-72'>
            <SearchForm metadataSettings={metadataSettings} clientConfig={clientConfig} client:only='react' />
        </div>

        <div class='flex-1'>
            {
                data.isOk() && (
                    <>
                        <div class='mb-1'>
                            Search returned {data._unsafeUnwrap().totalCount.toLocaleString()}
                            sequence{data._unsafeUnwrap().totalCount === 1 ? '' : 's'}
                        </div>
                        <Table data={data._unsafeUnwrap().data} config={config} client:load />

                        <div class='mt-4 flex justify-center'>
                            <Pagination
                                client:only='react'
                                count={Math.ceil(data._unsafeUnwrap().totalCount / pageSize)}
                            />
                        </div>
                    </>
                )
            }
        </div>
    </div>
</BaseLayout>
