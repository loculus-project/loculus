---
import { ErrorFeedback } from '../../components/ErrorFeedback';
import { AuthorDetails } from '../../components/SeqSetCitations/AuthorDetails';
import { SeqSetItem } from '../../components/SeqSetCitations/SeqSetItem';
import { SeqSetItemActions } from '../../components/SeqSetCitations/SeqSetItemActions';
import { getRuntimeConfig } from '../../config';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { SeqSetCitationClient } from '../../services/seqSetCitationClient.ts';
import type { SeqSet } from '../../types/seqSetCitation';
import { getAccessToken } from '../../utils/getAccessToken';

const clientConfig = getRuntimeConfig().public;
const session = Astro.locals.session;
const accessToken = getAccessToken(session)!;
const seqSetId = Astro.params.seqSetId!;
const version = Astro.params.version!;
const username = session?.user?.username;

const seqSetClient = SeqSetCitationClient.create();

const seqSetResponse = (await seqSetClient.call('getSeqSet', {
    params: { seqSetId, version },
})) as any;

const seqSetRecordsResponse = (await seqSetClient.call('getSeqSetRecords', {
    params: { seqSetId, version },
})) as any;

const seqSetCitedByResponse = (await seqSetClient.call('getSeqSetCitedBy', {
    params: { seqSetId, version },
})) as any;

const getSeqSetByVersion = (seqSetVersions: SeqSet[], version: string) => {
    const matchedVersion = seqSetVersions.find((obj) => {
        return obj.seqSetVersion === parseInt(version, 10);
    });
    if (matchedVersion === undefined) {
        return seqSetVersions[seqSetVersions.length - 1];
    }
    return matchedVersion;
};

const seqSet = seqSetResponse.value !== undefined ? getSeqSetByVersion(seqSetResponse.value, version) : undefined;

const authorResponse = seqSet !== undefined ? ((await seqSetClient.getAuthor(seqSet.createdBy)) as any) : undefined;
---

<BaseLayout title='SeqSets' data-testid='seqSets-item-container'>
    <div class='flex flex-col justify-center max-w-7xl'>
        {
            seqSet !== undefined ? (
                <div class='flex flex-row items-left'>
                    <div class='w-1/5 flex flex-col justify-start items-center'>
                        {authorResponse.value !== undefined ? (
                            <AuthorDetails
                                displayFullDetails={false}
                                firstName={authorResponse.value.firstName}
                                lastName={authorResponse.value.lastName}
                            />
                        ) : (
                            <ErrorFeedback
                                message={'Error while fetching author profile: ' + JSON.stringify(authorResponse.error)}
                                client:load
                            />
                        )}
                    </div>
                    <div class='w-4/5 pl-6'>
                        {seqSetRecordsResponse.value !== undefined ? (
                            <SeqSetItemActions
                                clientConfig={clientConfig}
                                accessToken={accessToken}
                                seqSet={{
                                    ...seqSet,
                                    createdBy:
                                        authorResponse?.value !== undefined
                                            ? [authorResponse.value?.firstName, authorResponse.value?.lastName]
                                                  .filter((name) => name !== null)
                                                  .join(' ')
                                            : seqSet.createdBy,
                                }}
                                seqSetRecords={seqSetRecordsResponse.value}
                                isAdminView={seqSet.createdBy === username}
                                client:only='react'
                            />
                        ) : (
                            <ErrorFeedback
                                message={
                                    'Error while fetching seqSet records: ' +
                                    JSON.stringify(seqSetRecordsResponse.error)
                                }
                                client:only='react'
                            />
                        )}
                        {seqSetRecordsResponse.value !== undefined && seqSetCitedByResponse.value !== undefined ? (
                            <SeqSetItem
                                clientConfig={clientConfig}
                                accessToken={accessToken}
                                seqSet={seqSet}
                                seqSetRecords={seqSetRecordsResponse.value}
                                citedByData={seqSetCitedByResponse.value}
                                isAdminView={seqSet.createdBy === username}
                                client:load
                            />
                        ) : (
                            <ErrorFeedback
                                message={
                                    'Error while fetching seqSet citations: ' +
                                    JSON.stringify(seqSetCitedByResponse.error)
                                }
                                client:only='react'
                            />
                        )}
                    </div>
                </div>
            ) : (
                <ErrorFeedback
                    message={'Error while fetching seqSet: ' + JSON.stringify(seqSetResponse.error)}
                    client:only='react'
                />
            )
        }
    </div>
</BaseLayout>
